openapi: 3.0.0
info:
  description: >
    # Introduction
      The SureMDM API enables you to interact with SureMDM server programmatically. You can use this API to integrate within your existing application to perform actions or retrieve data to build your own dashboard or use in some other kind of business use case. This page has required details available, including HTTP response codes, request format and error codes.
    # Get your API Key
      Every REST request made to SureMDM through available API needs ApiKey for Authentication and same can be requested through contacting your Account Manager from 42Gears team.
    # Authentication
      Every request must contain a Basic Authentication HTTP Header along with an ApiKey, below is the sample code:

          {
            using (var client = new HttpClient())
            {
              client.BaseAddress = new Uri("https://suremdm.42gears.com/api");
              client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", 
              Convert.ToBase64String(Encoding.ASCII.GetBytes(String.Format("{0}:{1}", username, password))));
              client.DefaultRequestHeaders.TryAddWithoutValidation("ApiKey", ApiKey);
              // your code goes here
            }
          }
  version: 1.0.0
  title: SureMDM
  x-logo:
    url: './logo.png'
    altText: SureMDM logo
tags:
  - name: Device
    description: |
      Everything about Device
  - name: Group
    description: |
      Everything about Groups
  - name: Tags
    description: |
      Everything about Tags
  - name: Dynamic Job
    description: |
      Everything about Dynamic Jobs
  - name: Custom Dynamic Job
    description: |
      Everything about Custom Dynamic jobs
  - name: Job
    description: |
      Everything about Static Jobs
  - name: Reports
    description: |
      Everything about Reports
  - name: Message
    description: |
      Everything about Messages
  - name: Customer Details
    description: |
      Everything about Customer Details
  - name: API Details
    description: |
      Everything about API Details
paths:
# Device label
  /device:
    get:
      tags:
        - Device
      summary: Get device details
      description: "Get device details by DeviceName, MACAddress or GroupID where device is assigned"
      parameters:
        - name: DeviceName
          in: query
          description: Name of the device
          schema:
            type: string
        - name: MACAddress
          in: query
          description: MAC address
          schema:
            type: string
        - name: GroupID
          in: query
          description: ID of the group (For home group, GroupID should be 'null')
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceModel"
      x-code-samples:
        - lang: 'C#'
          source: |
            using (var client = new HttpClient())
            {
                // ... API URI
                string URI = "https://testacc.test.suremdm.io/api/device";

                // ... basic authentication header 
                var byteArray = Encoding.ASCII.GetBytes(String.Format("{0}:{1}", "Username", "Password"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(byteArray));

                // ... ApiKey header 
                client.DefaultRequestHeaders.Add("ApiKey", "Your ApiKey");

                HttpResponseMessage response = client.GetAsync(URI).Result;

                // ... Check Status Code                                
                if (response.IsSuccessStatusCode)
                {
                    // ... Read the string.
                    HttpContent content = response.Content;
                    string result = content.ReadAsStringAsync().Result;
                    Console.WriteLine(result);
                }

            }
        - lang: 'JAVA'
          source: |
            OkHttpClient client = new OkHttpClient();
            Request request = new Request.Builder()
              .url("https://testacc.test.suremdm.io/api/device")
              .get()
              .addHeader("Content-Type", "application/json")
              .build();
            Response response = client.newCall(request).execute();
            // your code goes here

    put:
      tags:
        - Device
      summary: Delete device
      description: Delete device from system
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDevice"
        description: List of parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            "200":
              schema:
                type: string
                example: |
                  "true"
                description: |
                  true: Success<br/>
                  false: Fail
      x-code-samples:
        - lang: 'C#'
          source: |
            using (var client = new HttpClient())
            {
                // ... API URI
                string URI = "https://testacc.test.suremdm.io/api/device";

                // ... basic authentication header 
                var byteArray = Encoding.ASCII.GetBytes(String.Format("{0}:{1}", "Username", "Password"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(byteArray));

                // ... ApiKey header 
                client.DefaultRequestHeaders.Add("ApiKey", "Your ApiKey");

                var payload = "{\r\n  \"DeviceId\": \"22c245da-df91-4bd2-9ee9-75a9ccf61142\",\r\n  \"Action\": \"DELETE_DEVICE\"\r\n}";
                HttpContent data = new StringContent(payload, Encoding.UTF8, "application/json");
                HttpResponseMessage response = client.PostAsync(URI, data).Result;

                // ... Check Status Code                                
                if (response.IsSuccessStatusCode)
                {
                    // ... Read the string.
                    HttpContent content = response.Content;
                    string result = content.ReadAsStringAsync().Result;
                    Console.WriteLine(result);
                }
            }
        - lang: 'JAVA'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "stringified payload");
            Request request = new Request.Builder()
              .url("https://testacc.test.suremdm.io/api/device")
              .put(body)
              .addHeader("Content-Type", "application/json")
              .build();

            Response response = client.newCall(request).execute();
            // your code goes here
  /device/{id}:
    get:
      tags:
        - Device
      summary: Get device by ID
      description: Get details of particular device by DeviceID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the device
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceModel"
        "404":
          description: Not Found
  
  /devicename:
    get:
      tags:
        - Device
      summary: Get device name 
      description: "Get name of particular device by DeviceID"
      parameters:
        - in: query
          name: DeviceID
          description: List of device parameters
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: Client0026
                description: Name of device
    put:
      tags:
        - Device
      summary: Change device name 
      description: Change name of the device by DeviceId
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetDeviceName"
        description: List of job parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: true 
                description: |
                  true: Success<br/>
                  false: Fail
  /deviceapproval:
    get:
      tags:
        - Device
      summary: Approve device(s)
      description: Approve unapproved device(s)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: Approved device count
                items:
                 type: string
                example: ["Approved Device Count : 1"]
                
  /deviceassignment:
    put:
      tags:
        - Device
      summary: Assign devices to a group
      description: Assign device to a particular group/sub-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceAssignment"
        description: List of job parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: true
                description: |
                  true: Success<br/>
                  false: Fail
  /devicelog/{DeviceId}:
    get:
      tags:
        - Device
      summary: Device logs
      description: Get logs of particular device by DeviceId
      parameters:
        - name: DeviceId
          in: path
          description: |
            ID of the device
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceLogOutput"

  /datausagepolicy/{DeviceID}/{StartDate}/{EndDate}:
    get:
      tags:
        - Device
      summary: Device data usage
      description: "Get total data-usage details of particular device within specific time frame<br/>
        <b>Sample: </b>/DataUsagePolicy/8a14faf3-a26b-4ffb-aa52-f60c792d452b/2019-03-01/2019-03-07"
      parameters:
        - name: DeviceID
          in: path
          description: ID of target device
          required: true
          schema:
            type: string
        - name: StartDate
          in: path
          description: Start date (YYYY-MM-DD)
          required: true
          schema:
            type: string
        - name: EndDate
          in: path
          description: End date (YYYY-MM-DD)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataUsageOutput"
  /jobassignment:
    post:
      tags:
        - Device
      summary: Apply job on device
      description: |
        Assign job to particular device<br/>Jobs can be deployed Immediately or can be scheduled
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Immediate'
                - $ref: '#/components/schemas/Periodically'
                - $ref: '#/components/schemas/Days_Time'
                - $ref: '#/components/schemas/Date_Time'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
                example: "true"
                description: |
                  true: success
                  false: fail
      
  /dynamicjobqueue:
    post:
      tags:
        - Device
      summary: Dynamicjob deployment status of device
      description: Get dynamicjob deployment status of device(s) specified by their DeviceId
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DynamicJobQueueDevice"
        description: List of job parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  JobID:
                    type: string
                    description: ID of the job
                    example: ffea8e48-c1df-4548-94f4-e02cdd1e224b
                  DateTime:
                    type: string
                    description: Date and time when job was applied
                    example: 4/4/2019 7:16:59 AM
                  Type:
                    type: string
                    description: Type of the job
                    example: GetDeviceInfo
                  Status:
                    type: string
                    description: Job status
                    example: "2"
                  DynamicJobComments:
                    type: string
                    description: Detailed info about job
                    example: >
                      [4/4/2019 7:17:30 AM (UTC)] Job deployed successfully on
                      device
                  TimeOut:
                    type: string
                    description: Date and time when job timeout
                    example: 4/4/2019 7:17:59 AM
                  DeviceIdDynamicJobQueue:
                    type: string
                    description: ID of the device on which job is/was applied
                    example: 3167f5e3-4ac5-41c1-823c-714374edbdb4
  /jobqueue:
    post:
      tags:
        - Device
      summary: Job deployment status of device
      description: Get job deployment status of device(s) specified by their DeviceId
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobQueueDevice"
        description: List of job parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  JobID:
                    type: string
                    description: ID of the job
                    example: ffea8e48-c1df-4548-94f4-e02cdd1e224b
                  JobName:
                    type: string
                    description: Name of the job
                    example: test
                  Time:
                    type: string
                    description: Date and time when job was applied
                    example: 4/4/2019 7:16:59 AM
                  Size:
                    type: string
                    description: Size of job(in kb)
                    example: "111534"
                  Type:
                    type: string
                    description: Type of the job
                    example: File Transfer
                  Status:
                    type: string
                    description: |
                      Job status<br/>
                      DEPLOYED / SCHEDULED
                    example: SCHEDULED
                  RowId:
                    type: string
                    description: ""
                    example: DCFBBBEE-C043-426F-ACCF-212925BFD4BD
                  Success:
                    type: string
                    description: Is job was success fully applied
                    example: "1"
                  JobComments:
                    type: string
                    description: Detailed info about job
                    example: |
                      [4/2/2019 11:17:12 AM (UTC)] Job pending to be applied
                  NetworkType:
                    type: string
                    description: Type of network to use for applying job
                    example: "2"
                  DeviceIdJobQueue:
                    type: string
                    description: ID of the device on which job is/was applied
                    example: 8a14faf3-a26b-4ffb-aa52-f60c792d452b
  /location:
    get:
      tags:
        - Device
      summary: Get location of device
      description: |
        Get location details of device withing specified time frame<br>
        <i style="color:red;">Note: </i>
          - Make sure that Location Tracking is enabled
        on device<br/>
          - 24 Hours Time Format should be followed
      parameters:
        - name: DeviceID
          in: query
          description: ID of the device
          required: true
          schema:
            type: string
        - name: FromTime
          in: query
          description: "From time<br/> 
            <b>format: </b>YYYY-MM-DDTHH:MM:SS (2019-04-09T09:09:22) "
          required: false
          schema:
            type: string
        - name: ToTime
          in: query
          description: "To time<br/>
            <b>format: </b>YYYY-MM-DDTHH:MM:SS (2019-04-09T09:50:22) "
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationModel"
        "404":
          description: Not Found
# Group label
  /group:
    get:
      tags:
        - Group
      summary: Get home group details
      description: Get details of home(Default) group (Detail includes only upto first level of sub groups)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupGetModel"
          
    post:
      tags:
        - Group
      summary: Create new group
      description: This API is used to create a new group or subgroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupModel"
        description: List of group parameters
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPostOutputModel" 
      x-code-samples:
        - lang: 'C#'
          source: |
            using (var client = new HttpClient())
            {
                // ... API URI
                string URI = "https://testacc.test.suremdm.io/api/group";

                // ... basic authentication header 
                var byteArray = Encoding.ASCII.GetBytes(String.Format("{0}:{1}", "Username", "Password"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(byteArray));

                // ... ApiKey header 
                client.DefaultRequestHeaders.Add("ApiKey", "Your ApiKey");

                var payload = "{\r\n  \"GroupName\": \"Test\",\r\n  \"GroupID\": \"4b7198ec-a300-4f4c-a27e-e473c4b831cc\"\r\n}";
                HttpContent data = new StringContent(payload, Encoding.UTF8, "application/json");
                HttpResponseMessage response = client.PostAsync(URI, data).Result;

                //// ... Check Status Code                                
                if (response.IsSuccessStatusCode)
                {
                    // ... Read the string.
                    HttpContent content = response.Content;
                    string result = content.ReadAsStringAsync().Result;
                    Console.WriteLine(result);
                }
            }
        - lang: 'JAVA'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "{\r\n  \"GroupName\": \"Test\",\r\n  \"GroupID\": null\r\n}");
            Request request = new Request.Builder()
              .url("https://testacc.test.suremdm.io/api/group")
              .post(body)
              .addHeader("Content-Type", "application/json")
              .build();

            Response response = client.newCall(request).execute();
            // your code goes here
  /group/1/getAll:
    get:
      tags:
        - Group
      summary: Get details of all groups
      description: Get details of all groups under Home group(default) including each and every subgroups
      
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupGetAllModel"
        "404":
          description: Not Found

  /group/{GroupId}:
    get:
      tags:
        - Group
      summary: Get group details by ID
      description: Get details of group by GroupID (Detail includes only upto first level of sub groups)
      parameters:
        - name: GroupId
          in: path
          description: ID of the group
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupGetModel"
        "404":
          description: Not Found
    delete:
      tags:
        - Group
      summary: Delete group
      description: Delete group by GroupId
      parameters:
        - in: path
          name: GroupId
          description: ID of particular group to be deleted
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: true
                description: |
                  true: success<br/>
                  false: fail

  /jobassignment/{JobId}/{GroupId}/{ServerScheduleTime}/{RecursiveScheduleTime}:
    post:
      tags:
        - Group
      summary: Apply jobs on group
      description: This API is used to assign job to particular group defined by GroupId
      parameters:
        - in: path
          name: JobId
          required: true
          description: |
            ID of the job
          schema:
            type: string
        - in: path
          name: GroupId
          required: true
          description: |
            ID of the group
          schema:
            type: string
        - in: path
          name: ServerScheduleTime
          required: true
          description: |
            Schedule date and time to apply job('null' if not required)<br/>
            Date and Time format: YYYY/MM/DD HH:MM<br/>
            <i style="color:red;">Note: </i> Should be encoded in [Base64](https://en.wikipedia.org/wiki/Base64)<br/>
            <b>e.g: </b>2019/04/16 12:23➜MjAxOS8wNC8xNiAxMjoyMw==
          schema:
            type: string
        - in: path
          name: RecursiveScheduleTime
          required: true
          description: |
            Auto apply job on repeat<br/>
            <i style="color:red;">Note: </i> Should be encoded in [Base64](https://en.wikipedia.org/wiki/Base64)
          schema:
            type: string 
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string
                example: true
                description: |
                  true: success
                  false: fail
  "/GroupJobQueue/{GroupId}/{Type}":
    get:
      tags:
        - Group
      summary: Get job deployment status of group
      description: Get job deployment status of group
      parameters:
        - name: GroupId
          in: path
          description: ID of the group
          required: true
          schema:
            type: string
        - name: Type
          in: path
          description: |
            Get job by status<br/>
            0: Pending jobs<br/>
            1: Deployed jobs<br/>
            2: Failed Jobs
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  DeviceId:
                    type: string
                    description: ID of the device
                  JobID:
                    type: string
                    description: ID of the job
                    example: ffea8e48-c1df-4548-94f4-e02cdd1e224b
                  JobCount:
                    type: string
                    description: Job count
                    example: "2"
                  JobName:
                    type: string
                    description: Name of the job
                    example: testjob
                  Type:
                    type: string
                    description: Type of the job
                    example: Notification Policy
                  JobSize:
                    type: string
                    description: Size of job
                    example: "1302"
  # Tags label
  /tags:
    get:
      tags:
        - Tags
      summary: Get all the tags
      description: This API retrieves all the tags created by the administrator
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsOutputModel"
    
    post:
      tags:
        - Tags
      summary: Create a tag
      description: This API creates the tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagCreateModel"
        description: List of Tag creation parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "6901d80f-4466-4efc-a8c1-30f9c0e2117b"
                description: TagID
    put:
      tags:
        - Tags
      summary: Edit tag
      description: This API edits the tag name
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagModifyModel"
        description: List of Tag modification parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: 1
                description: Returns 1 if modification is successful
  /tags/{TagID}:
    delete:
      tags:
        - Tags
      summary: Delete tag
      description: This API deletes the tag specified by TagID
      parameters:
        - in: path
          name: TagID
          description: Tag ID of particular tag to be deleted
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: true
                description: |
                  true: success<br/>
                  false: fail
      x-code-samples:
        - lang: 'C#'
          source: |
            using (var client = new HttpClient())
            {
                // ... API URI
                string URI = "https://testacc.test.suremdm.io/api/tags/{TagID}";

                // ... basic authentication header 
                var byteArray = Encoding.ASCII.GetBytes(String.Format("{0}:{1}", "Username","Password"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(byteArray));

                // ... ApiKey header 
                client.DefaultRequestHeaders.Add("ApiKey", "Your ApiKey");

                HttpResponseMessage response = client.DeleteAsync(URI).Result;

                // ... Check Status Code                                
                if (response.IsSuccessStatusCode)
                {
                    // ... Read the string.
                    HttpContent content = response.Content;
                    string result = content.ReadAsStringAsync().Result;
                    Console.WriteLine(result);
                }

            }
        - lang: 'JAVA'
          source: |
            OkHttpClient client = new OkHttpClient();

            Request request = new Request.Builder()
              .url("https://testacc.test.suremdm.io/api/tags/6901d80f-4466-4efc-a8c1-30f9c0e2117b")
              .delete(null)
              .addHeader("Content-Type", "application/json")
              .build();

            Response response = client.newCall(request).execute();
            // your code goes here

  /DeviceAssignment/TagsAssignToDevices:
    put:
      tags:
        - Tags
      summary: Assign tag to device
      description: Assign tag to devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagsAssignToDeviceModel"
        description: List of parameters
        required: true
      responses:
          "200":
            description: OK
            content:
              application/json:
                schema:
                  type: string
                  example: true

# Dynamic job label
  /dynamicjob:
    post:
      tags:
        - Dynamic Job
      summary: "Apply dynamic job "
      description: >
        Apply dynamic job to particular device specified by DeviceID
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LockDevice'
                - $ref: '#/components/schemas/RebootDevice'
                - $ref: '#/components/schemas/RefreshDevice'
                - $ref: '#/components/schemas/GetDeviceApps'
                - $ref: '#/components/schemas/Wipe'
                - $ref: '#/components/schemas/Buzz'
                - $ref: '#/components/schemas/ChangePin'
                - $ref: '#/components/schemas/CallTracking'
                - $ref: '#/components/schemas/SMSTracking'
                
        description: List of Dynamicjobs
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: Status
                example: Queued
                
  # Custom Dynamic Job  
  /customdynamicjob:
    get:
      tags:
        - Custom Dynamic Job
      summary: Get custom dynamic jobs
      description: This API gets custom dynamic job details
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomDynamicJobOutPutModel"

    post:
      tags:
        - Custom Dynamic Job
      summary: Create custom dynamic job
      description: This API creates custom dynamic job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomDynamicJobModel"
        description: Body parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: true

  # static job label
  /job:
    get:
      tags:
        - Job
      summary: Get all jobs
      description: Get all the jobs from particular job folder
      parameters:
        - in: query
          name: FolderId
          description: ID of the job folder(pass null for default folder)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobOutputModel"
    delete:
      tags:
        - Job
      summary: Delete job details
      description: Delete job specified by JobID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobDeleteModel"
        description: List of delete job parameters
        required: true
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    description: Message
                    example: ""
                  Data:
                    type: string
                    description: Data returned
                    example: ""
                  Result:
                    type: boolean
                    description: Result
                    example: true
    post:
      tags:
        - Job
      summary: Create jobs
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/FileTransferJob'
                - $ref: '#/components/schemas/InstallJob'
                - $ref: '#/components/schemas/WiFiConfigJob'
                - $ref: '#/components/schemas/NotificationPolicyJob'
                - $ref: '#/components/schemas/DeviceMigrationJob'
                - $ref: '#/components/schemas/SMSTrackingJob'
                - $ref: '#/components/schemas/CallTrackingJob'
                - $ref: '#/components/schemas/AppSettingsJob'
                - $ref: '#/components/schemas/RemoteWipeJob'
                - $ref: '#/components/schemas/TextMessageJob'
                - $ref: '#/components/schemas/LocationTrackingJob'
                - $ref: '#/components/schemas/GeoFencingJob'
                - $ref: '#/components/schemas/TimeFencingJob'
                - $ref: '#/components/schemas/NetworkFencingJob'
                - $ref: '#/components/schemas/CompliancePolicyJob'
        description: List of Jobs
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: "8e7bdfe5-5c7d-4e0c-a808-1226c2259efc"
                description: JobID and Job FolderID separated by comma(,)
      x-code-samples:
        - lang: 'C#'
          source: |
            using (var client = new HttpClient())
            {
                // ... API URI
                string URI = "https://testacc.test.suremdm.io/api/job";

                // ... basic authentication header 
                var byteArray = Encoding.ASCII.GetBytes(String.Format("{0}:{1}", "Username", "Password"));
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(byteArray));

                // ... ApiKey header 
                client.DefaultRequestHeaders.Add("ApiKey", "Your ApiKey");

                var payload = "{\r\n  \"FolderId\": null,\r\n  \"JobName\": \"test job\",\r\n  \"JobType\": \"File Transfer\",\r\n  \"Platform\": \"android\",\r\n  \"MinimumVersion\": \"28\",\r\n  \"VersionCompare\": \"2\",\r\n  \"PayLoad\": [\r\n    \"eyAgCgkiTG9jYWxQYXRoIjoidGVzdC50eHQiLAoJIkRldmljZVBhdGgiOiIvc2RjYXJkLyIsCgkiSW5zdGFsbCI6ZmFsc2UsCgkiVXNlQmFzaWNBdXRoZW50aWNhdGlvbiI6ZmFsc2UsCgkiSXNIdHRwVXJsIjpmYWxzZSwKCSJIdHRwVXNlck5hbWUiOiIiLAoJIkh0dHBQYXNzd29yZCI6IiIsCgkiSXNTaWxlbnQiOmZhbHNlLAoJIkV4ZWN1dGVQYXRoIjoiIiwKCSJDdXJyZW50VXNlciI6ZmFsc2UsCgkiSm9iTmFtZVhNTCI6InRlc3QudHh0IiwKCSJGcm9tQXBwU3RvcmUiOmZhbHNlCn0=\"\r\n  ]\r\n}";
                HttpContent data = new StringContent(payload, Encoding.UTF8, "application/json");
                HttpResponseMessage response = client.PostAsync(URI, data).Result;

                //// ... Check Status Code                                
                if (response.IsSuccessStatusCode)
                {
                    // ... Read the string.
                    HttpContent content = response.Content;
                    string result = content.ReadAsStringAsync().Result;
                    Console.WriteLine(result);
                }
            }
        - lang: 'JAVA'
          source: |
            OkHttpClient client = new OkHttpClient();

            MediaType mediaType = MediaType.parse("application/json");
            RequestBody body = RequestBody.create(mediaType, "PayLoad here");
            Request request = new Request.Builder()
              .url("https://testacc.test.suremdm.io/api/job")
              .post(body)
              .addHeader("Content-Type", "application/json")
              .build();

            Response response = client.newCall(request).execute();

  #  Reports label
  /report:
    get:
      tags:
        - Reports
      summary: Get custom report list
      description: Get the list of all available custom reports
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportOutPutModel"
        "404":
          description: Not Found

    post:
      tags:
        - Reports
      summary: Request custom report
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SystemLog'
                - $ref: '#/components/schemas/DeviceActivity'
                - $ref: '#/components/schemas/CallLogTracking'
                - $ref: '#/components/schemas/JobsDeployed'
                - $ref: '#/components/schemas/InstalledJobs'
                - $ref: '#/components/schemas/DeviceHealth'
                - $ref: '#/components/schemas/DataUsage'
                - $ref: '#/components/schemas/DataUsageLegacy'
                - $ref: '#/components/schemas/AppVersion'
                - $ref: '#/components/schemas/DeviceConnected'
                - $ref: '#/components/schemas/ComplianceReport'
                - $ref: '#/components/schemas/AssetTracking'
                - $ref: '#/components/schemas/DeviceHistory'
        description: List of Reports<br/>Retrieve generated/scheduled reports using "Get generated reports" API
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: |
                  0: Fail <br/>
                  1: Success
                example: 1

  /report/{Type}/1:
    get:
      tags:
        - Reports
      summary: Get generated reports
      description: This api gets the list of all generated reports
      parameters:
        - name: Type
          in: path
          description: |
            Type of the report<br/>
            1: On-Demand Reports List<br/>
            2: Scheduled Reports List
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportModel"
        "404":
          description: Not Found

  /report/{ReportID}:
    delete:
      tags:
        - Reports
      summary: Delete scheduled report
      description: Delete pending scheduled reports by ReportID
      parameters:
        - name: ReportID
          in: path
          description: ID of the report
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: |
                  0: Fail <br/>
                  1: Success
                example: 1   
       
  # message label
  /message:
    get:
      tags:
        - Message
      summary: Fetch unread messages
      description: Get unread messages sent by devices to Administrator
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageModel"
        "404":
          description: Not Found

    delete:
      tags:
        - Message
      summary: Delete message
      description: Delete particular message specified by messageId
      parameters:
        - name: messageId
          in: query
          description: |
            ID(s) of message<br/><b>Sample: </b>["2","3"]
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: true
                description: |
                  true: success<br/>
                  false: fail
        "404":
          description: Not Found

  /Message/{days}/customdelete:
    delete:
      tags:
        - Message
      summary: Custom delete message
      description: Delete messages older than days specified
      parameters:
        - name: days
          in: path
          description: |
            Number of days
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: true
                description: |
                  true: success<br/>
                  false: fail

  /message/{messageId}:
    get:
      tags:
        - Message
      summary: Get message details by ID
      description: This API gets particular message specified by messageID and marks as
        Read.
      parameters:
        - name: messageId
          in: path
          description: ID of the message
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageIdModel"
        "404":
          description: Not Found


# Customer Details label
  /customer:
    get:
      tags:
        - Customer Details
      summary: Customer details
      description: Get the details of all customers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerOutputModel"
        "404":
          description: Not Found

  # API Details
  /version:
    get:
      tags:
        - API Details
      summary: Get API version.
      description: Get current SureMDM API version
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                example: 1.6   
servers:
  - url: http://suremdm.42gears.com/api
  - url: https://suremdm.42gears.com/api



# Components starts here
components:
  schemas:
    CustomerOutputModel:
      type: object
      properties:
        CustomerId:
          type: string
          description: ID of the customer
          example: 1
        Name:
          type: string
          description: Name of the customer
          example: customer name
        DeviceCount:
          type: string
          description: Count of Enrolled device(s)
          example: 5
        Address:
          type: string
          description: Address of the customer
          example: ""
        Email:
          type: string
          description: Email of the customer
          example: test@gmail.com
        Phone1:
          type: string
          description: Phone number of the customer
          example: "1234567890"
        Phone2:
          type: string
          description: Phone number of the customer
          example: "1234567890"
        Fax:
          type: string
          description: Fax address of the customer
          example: +44 161 999 8888

# Custom dynamic job models
    CustomDynamicJobModel:
      type: object
      required:
        - customjobname
        - customiconclassname
        - customjobid
      properties:
        customjobname:
          type: string
          description: Name of the custom dynamic job
          example: test job
          required: true
        customiconclassname:
          type: string
          description: Custom font-awesome icon class name
          example: fa-bicycle
          required: true
        customjobid:
          type: string
          description: ID of the job to apply as custom dynamic job
          example: eaa76725-ff02-4c45-8fca-4f6145d65d3f
          required: true
        PlatFormType:
          type: string
          description: Platform for which the job is created
          example: ANDROID
        IdCustomJob:
          type: string
          description: ID of the custom job(will be generated by system)
          example: ""

    CustomDynamicJobOutPutModel:
      type: object
      properties:
        IdCustomJob:
          type: string
          description: ID of the custom job(will be generated by system)
          example: "11243"
        CustomJobIconID:
          type: string
          description: ID of the custom icon used for dynamic job job
          example: "11243"
        CustomJobName:
          type: string
          description: Name of the custom dynamic job
          example: test job
        CustomIconClassName:
          type: string
          description: Custom font-awesome icon class name
          example: fa-bicycle
        CustomJobId:
          type: string
          description: ID of the job to apply as custom dynamic job
          example: eaa76725-ff02-4c45-8fca-4f6145d65d3f
        PlatFormType:
          type: string
          description: Platform for which the job is created
          example: ANDROID
        JobName:
          type: string
          description: Name of the job assigned to custom dynamic job
          example: null

#  Tag models
    GetTagsOutputModel:
      type: array
      items:
        type: object
        properties:
          TagName:
            type: string
            description: Name of the tag
            example: Bihar
          TagID:
            type: string
            description: ID of the tag
            example: 357e6250-f1e5-4b41-affe-676711a5ceb9
      example:
        - TagName: Bihar
          TagId: 357e6250-f1e5-4b41-affe-676711a5ceb9
        - TagName: Gujarat
          TagId: 0a10be77-eeef-4ad4-97f7-a6ee413bd2f7
        - TagName: Uttar Pradesh
          TagId: adc225b5-5897-4254-b661-fc1179d1be74

    TagCreateModel:
      type: object
      required:
        - TagName
      properties:
        TagName:
          type: string
          description: name of the tag
          example: Test_Tag

    TagModifyModel:
      type: object
      required:
        - TagName
        - TagID
      properties:
        TagName:
          type: string
          description: new name of the tag
          example: New_Tag
        TagID:
          type: string
          description: Tag ID of the tag that has to be updated
          example: adc225b5-5897-4254-b661-fc1179d1be74

    TagsAssignToDeviceModel:
      type: array
      items:
        type: object
        required:
          - DeviceId
          - TagId
        properties:
          DeviceId:
            type: string
            description: ID of the device
            example: 2ff21872-6e9f-43fe-a90e-3e9fe4203e8d
          TagId:
            type: string
            description: ID of the tag
            example: 2ff21872-6e9f-43fe-a90e-3e9fe4203e8d

# Report Models
    
    # System log report model
    SystemLog:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandSystemLog'
          Schedule: '#/components/schemas/ScheduledSystemLog'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: ID of the custom report<br/> System Logs report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsSystemLogObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2" >Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
              example: 100
      example:
        ReportID: 100
        QueryParams: "{\"groupid\": null,\"GroupName\": \"Home\",\"ShowAllLogs\": true,\"ShowJobLogs\": true,\"ShowRemoteSupportLogs\": true,\"ShowAppInstallLogs\": true,\"date_start\": \"2019-04-11\",\"date_end\": \"2019-04-17\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsSystemLogObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
          example: true
        GroupName:
          type: string
          description: Name of the group for which report will be generated
          example: true
        ShowAllLogs:
          type: boolean
          description: Include all logs<br/>Enables every other constraints
          example: true
        ShowJobLogs:
          type: boolean
          description: Include job logs
          example: true
        ShowRemoteSupportLogs:
          type: boolean
          description: Include remote support logs
          example: true
        ShowAppInstallLogs:
          type: boolean
          description: Include app install logs
          example: true
        date_start:
          type: string
          description: Start date
          example: "2018-12-24"
        date_end:
          type: string
          description: Start date
          example: "2018-12-24"
    OnDemandSystemLog:
      allOf: 
        - $ref: '#/components/schemas/SystemLog'
    ScheduledSystemLog:
      allOf: 
        - $ref: '#/components/schemas/SystemLog'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: true

# Asset tracking
    AssetTracking:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandAssetTracking'
          Schedule: '#/components/schemas/ScheduledAssetTracking'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Asset Tracking report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report.<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object.
              allOf:
                - $ref: '#/components/schemas/QueryParamsAssetTrackingObject'     
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of reporting.<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
              example: 100
      example:
        ReportID: 200
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    QueryParamsAssetTrackingObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated. 
          example: null
        GroupName:
          type: string
          description: Name of the group for which report will be generated. 
          example: Home
    OnDemandAssetTracking:
      allOf: 
        - $ref: '#/components/schemas/AssetTracking'
    ScheduledAssetTracking:
      allOf: 
        - $ref: '#/components/schemas/AssetTracking'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report.
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: true

              # Device Activity report
    DeviceActivity:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandDeviceActivity'
          Schedule: '#/components/schemas/ScheduledDeviceActivity'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Device activity report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsDeviceActivityObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
              example: 100
      example:
        ReportID: 250
        QueryParams: "{\"groupid\": null,\"GroupName\": \"Home\",\"DeviceName\": \"Client0000\",\"deviceid\": \"35ffdeb0-0f9f-4220-95d6-15c3e185e7fd\",\"date_start\": \"2018-12-24\",\"date_end\": \"2018-12-24\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsDeviceActivityObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
          example: null
        GroupName:
          type: string
          description: Name of the group for which report will be generated
          example: Home
        DeviceName:
          type: string
          description: Name of the device
          example: Client0000
        deviceid:
          type: string
          description: Id of the device
          example: 35ffdeb0-0f9f-4220-95d6-15c3e185e7fd
        date_start:
          type: string
          description: Start date
          example: "2018-12-24"
        date_end:
          type: string
          description: Start date
          example: "2018-12-24"
    OnDemandDeviceActivity:
      allOf: 
        - $ref: '#/components/schemas/DeviceActivity'
    ScheduledDeviceActivity:
      allOf: 
        - $ref: '#/components/schemas/DeviceActivity'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"
            
    # call tracking report
    CallLogTracking:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandCallLogTracking'
          Schedule: '#/components/schemas/ScheduledCallLogTracking'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Call tracking report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsCallLogTrackingObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 300
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"DeviceName\":\"Client0000\",\"date_start\":\"2010-01-01\",\"date_end\":\"2010-01-01\",\"deviceid\":\"35ffdeb0-0f9f-4220-95d6-15c3e185e7fd\",\"CallType\":\"Outgoing\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsCallLogTrackingObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
        GroupName:
          type: string
          description: Name of the group for which report will be generated
        DeviceName:
          type: string
          description: Name of the device
        deviceid:
          type: string
          description: Id of the device
        date_start:
          type: string
          description: Start date
        date_end:
          type: string
          description: Start date
        CallType:
          type: string
          description: Type of calls
    OnDemandCallLogTracking:
      allOf: 
        - $ref: '#/components/schemas/CallLogTracking'
    ScheduledCallLogTracking:
      allOf: 
        - $ref: '#/components/schemas/CallLogTracking'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"
  
  # Device history report
    DeviceHistory:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandDeviceHistory'
          Schedule: '#/components/schemas/ScheduledDeviceHistory'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Device history report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsDeviceHistoryObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 700
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"DeviceName\":\"Client0002\",\"date_start\":\"2010-01-01\",\"date_end\":\"2010-01-01\",\"deviceid\":\"8a76b3fc-6299-422b-a650-53adf2be1398\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsDeviceHistoryObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group where device belongs
        GroupName:
          type: string
          description: Name of the group where device belongs
        DeviceName:
          type: string
          description: Name of the device
        deviceid:
          type: string
          description: Id of the device
        date_start:
          type: string
          description: Start date
        date_end:
          type: string
          description: Start date
    OnDemandDeviceHistory:
      allOf: 
        - $ref: '#/components/schemas/DeviceHistory'
    ScheduledDeviceHistory:
      allOf: 
        - $ref: '#/components/schemas/DeviceHistory'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"

  #  Jobs Deployed
    JobsDeployed:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandJobsDeployed'
          Schedule: '#/components/schemas/ScheduledJobsDeployed'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Report of Jobs deployed
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsJobsDeployedObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 400
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"date_start\":\"2010-01-01\",\"date_end\":\"2010-01-01\",\"JobId\":\"eeb89057-40a2-4495-bb1d-d9f0f6e2ddce\",\"jobname\":\"text2\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsJobsDeployedObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated 
        GroupName:
          type: string
          description: Name of the group for which report will be generated 
        jobname:
          type: string
          description: |
            Name of the job<br/>
            "All": To get report for all jobs
        JobId:
          type: string
          description: ID of the job(for specifics)
        date_start:
          type: string
          description: Start date
        date_end:
          type: string
          description: Start date
    OnDemandJobsDeployed:
      allOf: 
        - $ref: '#/components/schemas/JobsDeployed'
    ScheduledJobsDeployed:
      allOf: 
        - $ref: '#/components/schemas/JobsDeployed'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"

    # Installed job report
    InstalledJobs:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandInstalledJobs'
          Schedule: '#/components/schemas/ScheduledInstalledJobs'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Report of install jobs
              example: 100
            
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsInstalledJobsObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 450
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"JobId\":\"d45f8845-4b62-4ff8-919b-67afa5ba3302\",\"jobname\":\"Install SureLock\",\"date_start\":\"2010-01-01\",\"date_end\":\"2010-01-01\",\"applicationname\":\"asd\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsInstalledJobsObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated 
        GroupName:
          type: string
          description: Name of the group for which report will be generated
        jobname:
          type: string
          description: |
            Name of the job<br/>
            "All": To get report for all jobs
        JobId:
          type: string
          description: ID of the job(for specifics)
        date_start:
          type: string
          description: Start date
        date_end:
          type: string
          description: Start date
        applicationname:
          type: string
          description: Application Name
    OnDemandInstalledJobs:
      allOf: 
        - $ref: '#/components/schemas/InstalledJobs'
    ScheduledInstalledJobs:
      allOf: 
        - $ref: '#/components/schemas/InstalledJobs'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"

    # Device health report
    DeviceHealth:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandDeviceHealth'
          Schedule: '#/components/schemas/ScheduledDeviceHealth'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Device health report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsDeviceHealthObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 600
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"date_start\":\"2010-01-01\",\"date_end\":\"2010-01-01\",\"battery\":\"100\",\"storagemb\":\"1000\",\"memorymb\":\"1000\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsDeviceHealthObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
        GroupName:
          type: string
          description: Name of the group for which report will be generated
        battery:
          type: string
          description: |
            Battery % threshold(<=)
        storagemb:
          type: string
          description: Storage space threshold in mb(<=)
        memorymb:
          type: string
          description: Physical memory threshold in mb(<=)
        date_start:
          type: string
          description: Start date
        date_end:
          type: string
          description: Start date
        
    OnDemandDeviceHealth:
      allOf: 
        - $ref: '#/components/schemas/DeviceHealth'
    ScheduledDeviceHealth:
      allOf: 
        - $ref: '#/components/schemas/DeviceHealth'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"

    # Data usage report
    DataUsage:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandDataUsage'
          Schedule: '#/components/schemas/ScheduledDataUsage'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Device data usage report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsDataUsageObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 750
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"tagid\":\"032019\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsDataUsageObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
        GroupName:
          type: string
          description: Name of the group for which report will be generated
        tagid:
          type: string
          description: |
            Billing cycle<br/>
            <b>Format: </b>MMYYYY<br/>
            <b>Sample: </b>032019
    OnDemandDataUsage:
      allOf: 
        - $ref: '#/components/schemas/DataUsage'
    ScheduledDataUsage:
      allOf: 
        - $ref: '#/components/schemas/DataUsage'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"

    # Data usage legacy
    DataUsageLegacy:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandDataUsageLegacy'
          Schedule: '#/components/schemas/ScheduledDataUsageLegacy'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Data usage legacy report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsDataUsageLegacyObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 800
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"date_start\":\"2010-01-01\",\"date_end\":\"2010-01-01\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsDataUsageLegacyObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
        GroupName:
          type: string
          description: Name of the group for which report will be generated 
        date_start:
          type: string
          description: Start date
        date_end:
          type: string
          description: Start date 
    OnDemandDataUsageLegacy:
      allOf: 
        - $ref: '#/components/schemas/DataUsageLegacy'
    ScheduledDataUsageLegacy:
      allOf: 
        - $ref: '#/components/schemas/DataUsageLegacy'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"

    # Device connected report
    DeviceConnected:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandDeviceConnected'
          Schedule: '#/components/schemas/ScheduledDeviceConnected'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Report of device connected
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsDeviceConnectedObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
      example:
        ReportID: 900
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"date_start\":\"2010-01-01\",\"date_end\":\"2010-01-01\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsDeviceConnectedObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
        GroupName:
          type: string
          description: Name of the group for which report will be generated
        date_start:
          type: string
          description: Start date
        date_end:
          type: string
          description: Start date
    OnDemandDeviceConnected:
      allOf: 
        - $ref: '#/components/schemas/DeviceConnected'
    ScheduledDeviceConnected:
      allOf: 
        - $ref: '#/components/schemas/DeviceConnected'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: "00:00"
    
    # Compliance report
    ComplianceReport:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandComplianceReport'
          Schedule: '#/components/schemas/ScheduledComplianceReport'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                Compliance report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsComplianceReportObject'     
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
              example: 100
      example:
        ReportID: 1100
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"ShowAllCompliance\":true,\"OSVersion\":true,\"JailbrokenOrRooted\":true,\"OnlineDeviceConnectivity\":true,\"SIMChange\":true,\"PasswordPolicy\":true}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsComplianceReportObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
          example: true
        GroupName:
          type: string
          description: Name of the group for which report will be generated
          example: true
        ShowAllCompliance:
          type: boolean
          description: Include all logs<br/>Enables every other constraints
          example: true
        OSVersion:
          type: boolean
          description: Include OS version logs
          example: true
        JailbrokenOrRooted:
          type: boolean
          description: Include report of device Jail Broken/Rooted logs
          example: true
        OnlineDeviceConnectivity:
          type: boolean
          description: Include logs pf when device came online
          example: true
        SIMChange:
          type: boolean
          description: Include SIM change logs
          example: true
        PasswordPolicy:
          type: string
          description: Include password policy report
          example: true
    OnDemandComplianceReport:
      allOf: 
        - $ref: '#/components/schemas/ComplianceReport'
    ScheduledComplianceReport:
      allOf: 
        - $ref: '#/components/schemas/ComplianceReport'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: true

    # App verion reports
    AppVersion:
      type: object
      discriminator: 
        propertyName: ReportType
        mapping:
          On-Demand: '#/components/schemas/OnDemandAppVersion'
          Schedule: '#/components/schemas/ScheduledAppVersion'
      allOf: 
        - type: object
          properties:
            ReportID: 
              type: integer
              description: |
                ID of the custom report<br/>
                App version report
              example: 100
            QueryParams: 
              description: |
                Constraints to be passed for generating report<br/>
                <i style="color:red;">Note: </i>
                  - Assign stringified object
              allOf:
                - $ref: '#/components/schemas/ReportParamsAppVersionObject' 
            EmailID: 
              type: string
              description: Report will be sent on this email address(optional)
            GroupName: 
              type: string
              description: Name of the group
              example: Home
            TimeZone: 
              type: string
              description: Time Zone
              example: +0530
            ReportType: 
              type: string
              description: |
                Type of the reporting<br/>
                <table>
                  <tr>
                    <th colspan="2">On-Demand</th>
                  </tr>
                  <tr>
                    <td>100</td>
                    <td>Generate report immediately</td>
                  </tr>
                  <tr>
                    <th colspan="2">Schedule</th>
                  </tr>
                  <tr>
                    <td>200</td>
                    <td>Generate report daily </td>
                  </tr>
                  <tr>
                    <td>300</td>
                    <td>Generate report weekly</td>
                  </tr>
                  <tr>
                    <td>400</td>
                    <td>Generate report monthly</td>
                  </tr>
                </table>
              example: 100      
      example:
        ReportID: 1000
        QueryParams: "{\"groupid\":null,\"GroupName\":\"Home\",\"ApplicationType\":\"System\",\"applicationname\":\"sfggd\"}"
        EmailID:
        GroupName: Home
        TimeZone: "+0530"
        ReportType: "200"
        CustomScheduleTime: "00:00"
    ReportParamsAppVersionObject:
      type: object
      properties:
        groupid:
          type: string
          description: ID of the group for which report will be generated
          example: true
        GroupName:
          type: string
          description: Name of the group for which report will be generated
          example: true
        ApplicationType:
          type: boolean
          description: |
            Type of application<br/>
            "All" : All type of apps<br>
            "Downloaded" : Downloaded apps only<br/>
            "System" : System apps only
          example: true
        applicationname:
          type: boolean
          description: Include OS version logs
          example: true
    OnDemandAppVersion:
      allOf: 
        - $ref: '#/components/schemas/AppVersion'
    ScheduledAppVersion:
      allOf: 
        - $ref: '#/components/schemas/AppVersion'
        - type: object
          properties:
            CustomScheduleTime:
              type: string
              description: |
                Custom schedule time for scheduled report
                <table>
                  <tr>
                    <td>Daily</td>
                    <td>Format: <b>HH:MM</b><br/>Sample: "01:00" (at 01:00 Daily)</td>
                  </tr>
                  <tr>
                    <td>Weekly</td>
                    <td>Format: <b>HH:MM~Day</b><br/>Sample: "01:00~4" (at 01:00 on every Thursday of week)</td>
                  </tr>
                  <tr>
                    <td>Monthly</td>
                    <td>Format: <b>HH:MM~Date</b><br/>Sample: "01:00~20" (at 01:00 on every 20th day of month)</td>
                  </tr>
                </table>
              example: true
        

# Location models
    LocationModel:
      type: object
      properties:
        DeviceId:
          type: string
          description: ID of the device
          example: 2ff21872-6e9f-43fe-a90e-3e9fe4203e8d
        Location:
          type: string
          description: Locations of device in provided time frame
          example:
            - Longitude: "70.7955399"
              Latitude: "22.2975679"
              Time: 2019-04-09T09:30:05Z
              LocationName: "Sadar Bazar, Sadar, Rajkot, Gujarat 360001, India "
            - Longitude: "70.7955399"
              Latitude: "22.2975679"
              Time: 2019-04-09T09:29:05Z
              LocationName: "Sadar Bazar, Sadar, Rajkot, Gujarat 360001, India "
            - Longitude: "70.7955399"
              Latitude: "22.2975679"
              Time: 2019-04-09T09:28:05Z
              LocationName: "Sadar Bazar, Sadar, Rajkot, Gujarat 360001, India "

  # Message models
    MessageModel:
      type: object
      properties:
        MessageId:
          type: string
          description: ID of the message
          example: 1
        DeviceId:
          type: string
          description: ID of the device
          example: 2ff21872-6e9f-43fe-a90e-3e9fe4203e8d
        DeviceName:
          type: string
          description: Name of the device
          example: Client0001
        Subject:
          type: string
          description: Subject of the message
          example: Re- Test Message
        TimeStamp:
          type: string
          description: Timestamp of the message
          example: 7/12/2018 7:07:15 AM
        Status:
          type: string
          description: Status of the message
          example: Unread
        PlatformType:
          type: string
          description: Platform of device
          example: Android

    MessageIdModel:
      type: object
      properties:
        Subject:
          type: string
          description: Subject of the message
          example: test
        Body:
          type: string
          description: Body of the message
          example: test
        Date:
          type: string
          description: Date of the message
          example: 12/07/2018
        Time:
          type: string
          description: Time of the message
          example: 07:07 AM
        SentTimeOnDevice:
          type: string
          description: Sent time on device of the message
          example: 7/12/2018 7:07:15 AM
        SentBy:
          type: string
          description: Sent by customer
          example: Client0003
        DeviceID:
          type: string
          description: Device ID of the device
          example: 2ff21872-6e9f-43fe-a90e-3e9fe4203e8d
        Status:
          type: string
          description: Status of the message
          example: Read

# Dynamic job models
    Job:
      type: object
      required:
        - DeviceID
        - JobType
      properties:
        DeviceID:
          type: string
          description: ID of the device
          example: ac4204f9-6f5e-4384-8c48-aa6919696199
    RefreshDevice:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Refresh Device details
              example: Refresh_Device
    GetDeviceApps:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Refresh Device app details
              example: GET_DEVICE_APPS
    LockDevice:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Lock Device
              example: Lock
    RebootDevice:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Reboot Device
              example: Reboot
    Buzz:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Send BUZZ to Device
              example: REMOTE_BUZZ
            PayLoad:
              type: string
              description: This dynamic job sends BUZZ to Device 
              example: |
                {"Interval":"3"}      
    ChangePin:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Change device lock pin
              example: CHANGE_PIN
            PayLoad:
              type: string
              description: Job specific PayLoad
              example: "1234"        
    CallTracking:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Apply call tracking job on Device
              example: APPLY_CALL_TRACKING
            PayLoad:
              type: string
              description: |
                Job specific PayLoad<br/><i style="color:red">encode in base64</i><br/>
                {
                  "isOn":"1",
                  “periodicity":"15”
                }
              example: 
                - ewogICAiaXNPbiI6IjEiLAogICDigJxwZXJpb2RpY2l0eSI6IjE14oCdCn0=  
    SMSTracking:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Apply SMS tracking job on Device
              example: APPLY_CALL_TRACKING
            PayLoad:
              type: string
              description: |
                Job specific PayLoad<br/><i style="color:red">encode in base64</i><br/>
                {
                  "isOn":"1",
                  “periodicity":"15”
                }
              example: 
                - ewogICAiaXNPbiI6IjEiLAogICDigJxwZXJpb2RpY2l0eSI6IjE14oCdCn0=          
    Wipe:
      allOf: 
        - $ref: '#/components/schemas/Job'
        - type: object
          properties:
            JobType:
              type: string
              description: Wipe all data on Device
              example: WIPE

# Job Assignment model
    Immediate:
      type: object
      required:
        - DeviceIds
        - JobId
      properties:
        DeviceIds:
          description: ID of the device
          type: string
          example: ac4204f9-6f5e-4384-8c48-aa6919696199
        JobId:
          description: ID of the job
          type: string
          example: eaa76725-ff02-4c45-8fca-4f6145d65d3f
    Periodically:
      allOf: 
        - $ref: '#/components/schemas/Immediate'
        - type: object
          properties:
            RecursiveScheduleTime:
              description: |
                Auto apply job on regular interval(is specified in minutes)
                <br/><b>Sample: </b>"12"
              type: string
              example: "12"
    Days_Time:
      allOf: 
        - $ref: '#/components/schemas/Immediate'
        - type: object
          properties:
            RecursiveScheduleTime:
              description: |
                Auto apply job on recursive schedule time and days
                <br/><b>Sample: </b>{"Time":"10:41","Days":["0","5","6"],"GMTTimeInterval":-330}
                  - Time: Time to apply job.<br/>Time Format: <a style="color:red">HH:MM</a>
                  - Days: Days on which job will be applied.<br/>["sun","mon","tue","wed","thu","fri","sat"] = ["0","1","2","3","4","5","6"]
              type: string
              example: |
                {"Time":"10:41","Days":["0","5","6"],"GMTTimeInterval":-330}
    Date_Time:
      allOf: 
        - $ref: '#/components/schemas/Immediate'
        - type: object
          properties:
            ServerScheduleTime:
              description: |
                Schedule date and time to apply job<br/>
                <b>Sample: </b>2019/4/10 5:11<br/>Input format: YYYY/MM/DD HH:MM
              type: string
              example: 2019/4/10 5:11


  # Delete Device model
    DeleteDevice:
      type: object
      required:
        - DeviceId
        - Action
      properties:
        DeviceId:
          type: string
          description: ID of the device
          example: 22c245da-df91-4bd2-9ee9-75a9ccf61142
        Action:
          type: string
          description: Action to be performed
          example: DELETE_DEVICE
      example:
        DeviceId: 22c245da-df91-4bd2-9ee9-75a9ccf61142
        Action: DELETE_DEVICE

    DataUsageOutput:
      type: object
      properties:
        DeviceId:
          type: string
          description: ID of the target device
          example: 8a14faf3-a26b-4ffb-aa52-f60c792d452b
        DeviceName:
          type: string
          description: Name of the device
          example: c2
        DeviceTotalWifiDataUsage:
          type: string
          description: Name of the job
          example: Push Data Job 1
        DeviceTotalMobileDataUsage:
          type: string
          description: Timestamp when the job is/was supposed to deploy
          example: 2017-07-21T13:45:58Z
        AppsDataUsage:
          type: string
          description: Data used by the app
          example: "'AppId': 'com.android.vending', 'AppName': 'Google Play Store',
            'AppIcon': 'iVBORwW8ufYoci', 'ForegroundMobileDataUsage': 0,
            'BackgroundMobileDataUsage': 0, 'ForegroundWifiDataUsage': 0,
            'BackgroundWifiDataUsage': 88882340"
        DataUsage:
          type: string
          description: Timestamp when the job is/was supposed to deploy
          example: "'DeviceId': 'e4177576-b8e4-4bfc-8728-62437ae43f53',
            'MobileDataUsage': 0, 'WifiDataUsage': 1961989, 'StartTime':
            '2017-08-17T14:20:18+05:30', 'EndTime': '2017-08-17T17:31:49+05:30',
            'IsRoaming': '0'"
        CurrentCycleStartDate:
          type: string
          description: Timestamp for start of Current cycle
          example: 0001-01-01T00:00:00
        CurrentCycleEndDate:
          type: string
          description: Timestamp for end of Current cycle
          example: 0001-01-01T00:00:00
        PrevCycleStartDate:
          type: string
          description: Timestamp for start of previous cycle"
          example: 2017-07-21T13:45:58Z
        PrevCycleEndDate:
          type: string
          description: Timestamp for end of previous cycle
          example: 0001-01-01T00:00:00


    DeviceLogOutput:
      type: object
      properties:
        Time:
          type: string
          description: Time
          example: 2019-04-03T04:50:10.818Z
        Message:
          type: string
          description: Detail.
          example: '"New device(Client0017) registered"'
        Type:
          type: string
          description: Log type
          example: System Log

# reports model
    ReportOutPutModel:
      type: object
      properties:
        ReportID:
          type: integer
          description: ID of the report
          example: 400
        ReportName:
          type: string
          description: Name of the report
          example: Jobs Deployed
        ReportDescription:
          type: string
          description: Details of the report
          example: |
            Report listing details of all the deployed jobs eg: Job Name, Job Status, Job Deployed Time, etc.
        UseInfluxQueryReports:
          type: string
          description: |
            Influx query<br/>
            0: SQL<br/>
            1: Influx<br/>
            2: MongoDB<br/>
          example: "0"
    ReportModel:
      type: object
      properties:
        OfflineReportId:
          type: string
          description: ID of the report
          example: 49771
        QueryParams:
          type: string
          description: Query parameters
          example: ''
        ReportType:
          type: string
          description: Type of the report
          example: 100
        TimeZone:
          type: string
          description: Time Zone
          example: ''
        URLReports:
          type: string
          description: URL to get report 
          example: '"https://suremdm1reports.s3.amazonaws.com/1/reports/ondemand/DeviceActivity_Home_20190311055522_FpdBJual1kg.zip?AWSAccessKeyId=AKIAIML7GM374T2GBBGA&Expires=1583906125&Signature=Q1KlQWdkXvjljqK0urhvxP9RA%2Bk%3D"'
        ReportParams:
          type: string
          description: Report Parameters
          example: 'null'
        ReportID:
          type: string
          description: ID of the report
          example: '250'
        SendMail:
          type: boolean
          description: Send mail
          example: true
        EmailID:
          type: string
          description: Email id
          example: aa@gmail.com
        StatusOfflineReports:
          type: string
          description: Status of offline report
          example: null
        TimeStamp:
          type: string
          description: Time Stamp
          example: '3/15/2019 9:36:04 AM'
        isReadReports:
          type: boolean
          description: Check if report is being read or not
          example: '0'
        StatusReports:
          type: boolean
          description: Status of report
          example: '1'
        MarkDelete:
          type: string
          description: Mark delete
          example: 'null'
        GroupName:
          type: string
          description: Name of the group
          example: Home

# Job deployment model
    JobQueueDevice:
      type: object
      required:
        - DeviceIds
      properties:
        DeviceIds:
          type: string
          description: Id(s) of selected devices separated by comma(,)
          example: bd3a17c3-54aa-4ccb-afbc-5517054a2fc6
        bShowAll:
          type: boolean
          description: |
            Pass one of these value to fetch specific job deployment status
            <br/>true : pending and deployed jobs
            <br/>false : only pending jobs
          example: true
        JobqueueStatus:
          type: string
          description: Job queue status
          example: SHOWALL
        AllDevicesSelected:
          type: boolean
          example: false
          description: All devices are selected
      example:
        DeviceIds: 8a14faf3-a26b-4ffb-aa52-f60c792d452b,edf13234-443c-46f0-9b67-c730eb9ce7e1
        bShowAll: true
        JobqueueStatus: SHOWALL
        AllDevicesSelected: false


    DynamicJobQueueDevice:
      type: object
      properties:
        PayLoad:
          type: string
          description: ID of the selected device(s)
          example: '["3167f5e3-4ac5-41c1-823c-714374edbdb4"]'

  # Device Assignment model
    DeviceAssignment:
      type: array
      items:
        type: object
        required:
          - DeviceId
          - GroupId
        properties:
          DeviceId:
            type: string
            description: ID of the device
            example: aa8b3b36-9684-42b6-996b-84c319df75ff
          GroupId:
            type: string
            description: ID of the group
            example: 1234f195-69a3-4f7d-9c94-957d27573987
      example: [{"DeviceId": "aa8b3b36-9684-42b6-996b-84c319df75ff","GroupId": "1234f195-69a3-4f7d-9c94-957d27573987"}]


    JobOutputModel:
      type: object
      properties:
        JobID:
          type: string
          description: ID of the job
          example: 7bb36bea-24a9-46d4-9b5e-4fe2cb01b181
        JobFolderID:
          type: string
          description: ID of the job folder
          example: "null"
        JobName:
          type: string
          description: Name of the job
          example: Test
        Platform:
          type: string
          description: Platform name
          example: android
        Type:
          type: string
          description: Type of the job
          example: Install
        Size:
          type: string
          description: Size of the job
          example: "1506"
        LastModified:
          type: string
          description: LastModified time stamp of the job
          example: 7/12/2018 7:06:19 AM
        UsesRemoteStorageJobtable:
          type: string
          description: Uses Remote Storage Job table
          example: "0"

# Group Models
    GroupGetModel:
      type: object
      properties:
        Groups:
          type: array
          items:
            type: object
            properties:
              ParentGroupID:
                type: string
                description: ID of the parent group
              DefaultJobsCount:
                type: integer
                description: Jobs count
              DeviceNameRule:
                type: string
                description: 
              GroupName:
                type: string
                description: Name of the group
              GroupID:
                type: string
                description: ID of the group
        TotalDevices:
          type: integer
          description: Total number of devices in current group
        TotalSubgroups:
          type: integer
          description: Total sub-groups in first level
        Devices:
          type: integer
          description: Number of devices in current group
        Online:
          type: integer
          description: Number of online devices in current group
        Offline:
          type: integer
          description: Number of offline devices in current group
        TotalDevicesExcludingSubGroups:
          type: integer
          description: Total number of devices excluding sub-groups
      example:
        Groups:
          - ParentGroupID: null
            DefaultJobsCount: 0                
            DeviceNameRule: null
            GroupName: group1
            GroupID: 5e1c484f-972f-4c06-8f84-aae0e7f7b9fe
          - ParentGroupID: null
            DefaultJobsCount: 0                
            DeviceNameRule: null
            GroupName: group2
            GroupID: 5e1c484f-972f-4c06-8f84-aae0e7f7b9fe
        TotalDevices: 1
        TotalSubgroups: 0
        Devices: 1
        Online: 0   
        Offline: 1
        TotalDevicesExcludingSubGroups: 0
    
    GroupGetAllModel:
      type: object
      properties:
        Groups:
          type: array
          items:
            type: object
            properties:
              ParentGroupID:
                type: string
                description: ID of the parent group
              DefaultJobsCount:
                type: integer
                description: Jobs count
              DeviceNameRule:
                type: string
                description: 
              GroupName:
                type: string
                description: Name of the group
              GroupID:
                type: string
                description: ID of the group
        TotalDevices:
          type: integer
          description: Total number of devices in current group
        TotalSubgroups:
          type: integer
          description: Total sub-groups in first level
        Devices:
          type: integer
          description: Number of devices in current group
        Online:
          type: integer
          description: Number of online devices in current group
        Offline:
          type: integer
          description: Number of offline devices in current group
        TotalDevicesExcludingSubGroups:
          type: integer
          description: Total number of devices excluding sub-groups
      example:
        Groups:
          - ParentGroupID:
            DefaultJobsCount: 0
            DeviceNameRule:
            GroupName: Layer1_group
            GroupID: ac5b891d-a352-437b-8454-8c71adcccb5f
          - ParentGroupID: ac5b891d-a352-437b-8454-8c71adcccb5f
            DefaultJobsCount: 0
            DeviceNameRule: 
            GroupName: Layer2_group
            GroupID: ba680645-d4ff-4e59-9052-a85e5c12805e
          - ParentGroupID: ba680645-d4ff-4e59-9052-a85e5c12805e
            DefaultJobsCount: 0
            DeviceNameRule: 
            GroupName: Layer3_group
            GroupID: 888804d8-f3ae-4080-a286-6523aaf129ba
        TotalDevices: 0
        TotalSubgroups: 0
        Devices: 0 
        Online: 0
        Offline: 0
        TotalDevicesExcludingSubGroups: 0

    GroupPostOutputModel:
      type: object
      description: ID of the group
      example: 8afc87ba-d797-4de4-85b0-8971db41a94d

    GroupModel:
      type: object
      required: 
        - GroupName
      properties:
        GroupName:
          type: string
          description: Name of the group
          example: Test
        GroupID:
          type: string
          description: ID of parent group(null for home group)
          example: 4b7198ec-a300-4f4c-a27e-e473c4b831cc


# Delete job model
    JobDeleteModel:
      type: object
      required:
        - FolderId
        - JobID
      properties:
        FolderId:
          type: string
          description: ID of the job folder
        JobID:
          type: string
          description: ID of the job
          example: '["4b7198ec-a300-4f4c-a27e-e473c4b831cc"]'
        JobType:
          type: string
          description: Type of the job
          example: JOBS

# Set Devicename model
    SetDeviceName:
      type: object
      required:
        - DeviceId
        - DeviceName
      properties:
        DeviceId:
          type: string
          description: ID of the device
          example: ac4204f9-6f5e-4384-8c48-aa6919696199
        DeviceName:
          type: string
          description: Name of the device
          example: Client002

    DeviceModel:
      type: array
      items:
        type: object
        properties:
          DeviceID:
            type: string
            description: ID of the Device
            example: 2ff21872-6e9f-43fe-a90e-3e9fe4203e8d
          ConnectionStatus:
            type: string
            description: Connection status
            example: Online
          GroupID:
            type: string
            description: ID of the group
          DeviceIPAddress:
            type: string
            description: IP of the device
            example: 192.168.1.103
          DeviceName:
            type: string
            description: Name of the device
            example: Client0003
          UserID:
            type: string
            description: ID of the user
            example: "null"
          LastTimeStamp:
            type: string
            description: Last time stamp  when device was online
            example: 7/12/2018 7:05:13 AM
          DeviceModelName:
            type: string
            description: Model name of the device
            example: Lenovo TB-8504X
          PlatformType:
            type: string
            description: Platform used
            example: Android
          Operator:
            type: string
            description: Operator name
            example: Unknown
          Battery:
            type: string
            description: Battery status
            example: "90"
          PhoneSignal:
            type: string
            description: cellular signal strength 
            example: "0"
          AgentVersion:
            type: string
            description: Nix agent version
            example: "12.29"
          SureLockVersion:
            type: string
            description: SureLock version
            example: "8.27"
          SureFoxVersion:
            type: string
            description: SureFox version
            example: "null"
          SureVideoVersion:
            type: string
            description: SureVideo version
          DefaultHome:
            type: string
            description: Default home launcher
            example: com.lenovo.launcher
          Notes:
            type: string
            description: Notes
            example: "null"
          IMEI:
            type: string
            description: IMEI of the device
            example: "866991030279668"
          IMSI:
            type: string
            description: IMSI of the device
            example: Unknown
          PhoneNumber:
            type: string
            description: Phone number 
            example: Unknown
          SerialNumber:
            type: string
            description: Serial number of the device
            example: HGAFEZ0C
          TrackingOn:
            type: string
            description: Whether tracking is on
            example: "0"
          TrackingInterval:
            type: string
            description: Tracking interval
            example: "0"
          CallLogTrackingOn:
            type: string
            description: Whether call log tracking is on
            example: "0"
          CallLogTrackingInterval:
            type: string
            description: call log tracking interval
            example: "1"
          Protocol:
            type: string
            description: Protocol
            example: "0"
          JobsFailed:
            type: string
            description: Jobs failed to apply
            example: "null"
          RootStatus:
            type: string
            description: Root status
            example: "1"
          MacAddress:
            type: string
            description: MAC address of the device
            example: 2C:FD:AB:03:80:3B
          SecurityPolicyPickedByDevice:
            type: string
            description: Security policy used
            example: "null"

# Create job model
    JobCreateModel:
      type: object
      required:
        - JobName
        - FolderId
        - JobType
        - Platform
        - PayLoad
      properties:
        JobName:
          type: string
          description: Name of the job
          example: test
        FolderId:
          type: string
          description: ID of the job folder (null for default folder)
          example: f38f9258-62ce-4187-b8aa-9914e129f015
    
    # Compliance policy job model
    CompliancePolicyJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidCompliancePolicy'
          Others: '#/components/schemas/OthersCompliancePolicy'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Compliance Policy job

            
            PayLoad:  
              allOf:
                - $ref: '#/components/schemas/CompliancePolicyPayLoad'
              description: >
                Job specific payload<br/>
                    
                      [  
                        {  
                          "OSVersionRule":{  
                            "AndroidVersionFirst":"14",
                            "AndroidVersionSecond":"26",
                            "iOSVersionFirst":"7.0",
                            "iOSVersionSecond":"10.0",
                            "macOSVersionFirst":"10.13",
                            "macOSVersionSecond":"10.14",
                            "Actions":[  
                              {  
                                "type":"Send_Message",
                                "delayTime":0,
                                "delayunit":"now"
                              }
                            ]
                          },
                          "JailBrokenRootedRule":{  
                            "AndroidRooted":false,
                            "iOSJailBroken":false,
                            "Actions":[  
                              {  
                                "type":"Move_To_Blacklist",
                                "delayTime":0,
                                "delayunit":"now"
                              }
                            ]
                          },
                          "OnlineDeviceConnectivityRule":{  
                            "Time":"5",
                            "Period":"Minutes",
                            "Actions":[  
                              {  
                                "type":"Wipe_The_Device",
                                "delayTime":"2",
                                "delayunit":"Minutes"
                              }
                            ]
                          },
                          "SimChangeRule":{  
                            "Actions":[  
                              {  
                                "type":"Lock_Device",
                                "delayTime":"1",
                                "delayunit":"Hours"
                              }
                            ]
                          },
                          "PasscodePolicyRule":{  
                            "Actions":[  
                              {  
                                "type":"Email_Notification",
                                "delayTime":"1",
                                "delayunit":"Hours",
                                "emailids":"abc@gmail.com"
                              }
                            ]
                          },
                          "BatteryRule":{  
                            "BatteryPercentage":"20",
                            "PluggedStatus":0,
                            "Actions":[  
                              {  
                                "type":"Apply_Job",
                                "delayTime":0,
                                "delayunit":"now",
                                "jobids":[  
                                  "70800079-4890-4ab2-a97b-111966d35052"
                                ]
                              }
                            ]
                          },
                          "ApplicationPolicyRule":{  
                            "BlacklistedPackages":[  
                              "fre"
                            ],
                            "Actions":[  
                              {  
                                "type":"Send_Sms",
                                "delayTime":0,
                                "delayunit":"now",
                                "phonenumber":"+919999988888"
                              }
                            ]
                          },
                          "IsEnable":true
                        }
                      ]

                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
            Platform:
            type: string
            description: |
              Name of platform.<br/>
              <b>Platform Supported: </b>android, iOS, any, macOS              
      example:
        FolderId: 
        JobName: test job
        JobType: Compliance_Job
        Platform: android
        PayLoad:
          - W3siT1NWZXJzaW9uUnVsZSI6eyJBbmRyb2lkVmVyc2lvbkZpcnN0IjoiMTQiLCJBbmRyb2lkVmVyc2lvblNlY29uZCI6IjI2IiwiaU9TVmVyc2lvbkZpcnN0IjoiNy4wIiwiaU9TVmVyc2lvblNlY29uZCI6IjEwLjAiLCJtYWNPU1ZlcnNpb25GaXJzdCI6IjEwLjEzIiwibWFjT1NWZXJzaW9uU2Vjb25kIjoiMTAuMTQiLCJBY3Rpb25zIjpbeyJ0eXBlIjoiU2VuZF9NZXNzYWdlIiwiZGVsYXlUaW1lIjowLCJkZWxheXVuaXQiOiJub3cifV19LCJKYWlsQnJva2VuUm9vdGVkUnVsZSI6eyJBbmRyb2lkUm9vdGVkIjpmYWxzZSwiaU9TSmFpbEJyb2tlbiI6ZmFsc2UsIkFjdGlvbnMiOlt7InR5cGUiOiJNb3ZlX1RvX0JsYWNrbGlzdCIsImRlbGF5VGltZSI6MCwiZGVsYXl1bml0Ijoibm93In1dfSwiT25saW5lRGV2aWNlQ29ubmVjdGl2aXR5UnVsZSI6eyJUaW1lIjoiNSIsIlBlcmlvZCI6Ik1pbnV0ZXMiLCJBY3Rpb25zIjpbeyJ0eXBlIjoiV2lwZV9UaGVfRGV2aWNlIiwiZGVsYXlUaW1lIjoiMiIsImRlbGF5dW5pdCI6Ik1pbnV0ZXMifV19LCJTaW1DaGFuZ2VSdWxlIjp7IkFjdGlvbnMiOlt7InR5cGUiOiJMb2NrX0RldmljZSIsImRlbGF5VGltZSI6IjEiLCJkZWxheXVuaXQiOiJIb3VycyJ9XX0sIlBhc3Njb2RlUG9saWN5UnVsZSI6eyJBY3Rpb25zIjpbeyJ0eXBlIjoiRW1haWxfTm90aWZpY2F0aW9uIiwiZGVsYXlUaW1lIjoiMSIsImRlbGF5dW5pdCI6IkhvdXJzIiwiZW1haWxpZHMiOiJhYmNAZ21haWwuY29tIn1dfSwiQmF0dGVyeVJ1bGUiOnsiQmF0dGVyeVBlcmNlbnRhZ2UiOiIyMCIsIlBsdWdnZWRTdGF0dXMiOjAsIkFjdGlvbnMiOlt7InR5cGUiOiJBcHBseV9Kb2IiLCJkZWxheVRpbWUiOjAsImRlbGF5dW5pdCI6Im5vdyIsImpvYmlkcyI6WyI3MDgwMDA3OS00ODkwLTRhYjItYTk3Yi0xMTE5NjZkMzUwNTIiXX1dfSwiQXBwbGljYXRpb25Qb2xpY3lSdWxlIjp7IkJsYWNrbGlzdGVkUGFja2FnZXMiOlsiZnJlIl0sIkFjdGlvbnMiOlt7InR5cGUiOiJTZW5kX1NtcyIsImRlbGF5VGltZSI6MCwiZGVsYXl1bml0Ijoibm93IiwicGhvbmVudW1iZXIiOiIrOTE5OTk5OTg4ODg4In1dfSwiSXNFbmFibGUiOnRydWV9XQ==
    CompliancePolicyPayLoad:
      type: object
      properties:
        OSVersionRule:
          type: object
          description: OS version compliance rules
          properties:
            AndroidVersionFirst:
              type: string
              description: The Minimum API Version of Android OS where compliance job needs
                to be applied [API
                level](https://source.android.com/setup/start/build-numbers)
              example: 14
            AndroidVersionSecond:
              type: string
              description: The Maximum API Version of Android OS where compliance job needs
                to be applied [API
                level](https://source.android.com/setup/start/build-numbers)
              example: 26
            iOSVersionFirst:
              type: string
              description: The Minimum Version iOS where compliance job needs to be applied
              example: 7
            iOSVersionSecond:
              type: string
              description: The Maximum Version of iOS where compliance job needs to be
                applied
              example: 10
            Actions:
              type: array
              description: Actions to be performed if rules are not followed
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of Action when the above things aren't matched
                    example: Send_Message
                  delayTime:
                    type: string
                    description: Delay Time after which job gets applied
                    example: 0
                  delayunit:
                    type: string
                    description: Delay time unit (now, min, hrs)
                    example: now
        JailBrokenRootedRule:
          type: object
          description: JailBroken/Rooted device policy rules
          properties:
            AndroidRooted:
              type: boolean
              description: Whether Android device should be rooted to deploy the job
              example: false
            iOSJailBroken:
              type: boolean
              description: Whether iOS device should be Jailbroken to deploy the job
              example: false
            Actions:
              type: array
              description: Actions to be performed if rules are not followed
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of Action when the above things aren't matched
                    example: Move_To_Blacklist
                  delayTime:
                    type: string
                    description: Delay Time after which job gets applied
                    example: 0
                  delayunit:
                    type: string
                    description: Delay time unit (now, min, hrs)
                    example: now
        OnlineConnectivityRule:
          type: object
          description: Online connectivity policy rules
          properties:
            Time:
              type: string
              description: Time period to deploy job
              example: false
            Period:
              type: string
              description: Unit of time period
              example: Minutes
            Actions:
              type: array
              description: Actions to be performed if rules are not followed
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of Action when the above things aren't matched
                    example: Move_To_Blacklist
                  delayTime:
                    type: string
                    description: Delay Time after which job gets applied
                    example: 2
                  delayunit:
                    type: string
                    description: Delay time unit (now, min, hrs)
                    example: now
        SimChangeRule:
          type: object
          description: SIM change policy rules
          properties:
            Actions:
              type: array
              description: Actions to be performed if rules are not followed
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of Action when the above things aren't matched
                    example: Lock_Device
                  delayTime:
                    type: string
                    description: Delay Time after which job gets applied
                    example: 1
                  delayunit:
                    type: string
                    description: Delay time unit (now, min, hrs)
                    example: Hours
        PasscodePolicyRule:
          type: object
          description: Passcode policy rules
          properties:
            Actions:
              type: array
              description: Actions to be performed if rules are not followed
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of Action when the above things aren't matched
                    example: Email_Notification
                  delayTime:
                    type: string
                    description: Delay Time after which job gets applied
                    example: 1
                  delayunit:
                    type: string
                    description: Delay time unit (now, min, hrs)
                    example: Hours
                  emailids:
                    type: string
                    description: Email Ids to send the notification of password
                      modification.
                    example: abc@gmail.com
        BatteryRule:
          type: object
          description: Battery policy rules
          properties:
            BatteryPercentage:
              type: string
              description: Time period to apply action(s)
              example: false
            PluggedStatus:
              type: integer
              description: >
                Checks whether to apply action when plugged in or not<br/> 
                0:	Unplugged<br/>
                1:	Plugged<br/>
              example: 0
            Actions:
              type: array
              description: Actions to be performed if rules are not followed
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of Action when the above things aren't matched
                    example: Apply_Job
                  delayTime:
                    type: string
                    description: Delay Time after which job gets applied
                    example: 0
                  delayunit:
                    type: string
                    description: Delay time unit (now, min, hrs)
                    example: now
                  jobids:
                    type: array
                    items:
                      type: string
                      description: Job ID of to be applied job
                      example: 70800079-4890-4ab2-a97b-111966d35052
        ApplicationPolicyRule:
          type: object
          description: Application policy rules
          properties:
            BlackListedPackages:
              type: array
              items:
                type: string
                description: The pacage name which needs to be black listed
                example: com.facebook.android
            Actions:
              type: array
              description: Actions to be performed if rules are not followed
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: Type of Action when the above things aren't matched
                    example: Send_Sms
                  delayTime:
                    type: string
                    description: Delay Time after which job gets applied
                    example: 0
                  delayunit:
                    type: string
                    description: Delay time unit (now, min, hrs)
                    example: now
                  phonenumber:
                    type: string
                    description: Phone number where SMS needs to be sent
                    example: 919999988888
        IsEnable:
          type: boolean
          description: Whether to enable Compliance Policy or not
          example: true
    androidCompliancePolicy:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/CompliancePolicyJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                Android [API level](https://source.android.com/setup/start/build-numbers).<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison.<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =   MinimumVersion<br/>
              example: |
                "2"
    OthersCompliancePolicy:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/CompliancePolicyJob'

# File transferjob model
    FileTransferJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/android'
          Others: '#/components/schemas/OthersFileTransfer'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                File Transfer
              example: File Transfer
            PayLoad:
              description: >
                Job specific payload<br/>

                    {  
                      "LocalPath":"test.txt",
                      "DevicePath":"/sdcard/",
                      "Install":false,
                      "UseBasicAuthentication":false,
                      "IsHttpUrl":false,
                      "HttpUserName":"",
                      "HttpPassword":"",
                      "IsSilent":false,
                      "ExecutePath":"",
                      "CurrentUser":false,
                      "JobNameXML":"test.txt",
                      "FromAppStore":false
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64).
              allOf:
                - $ref: '#/components/schemas/FileTransferPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "AndroidVR", "androidwear",<br/>"windows_ce", "windows_mobile", "windows", "Linux"
      example:
        FolderId: 
        JobName: test job
        JobType: File Transfer
        Platform: android
        MinimumVersion: "28"
        VersionCompare: "2"
        PayLoad:
          - eyAgCgkiTG9jYWxQYXRoIjoidGVzdC50eHQiLAoJIkRldmljZVBhdGgiOiIvc2RjYXJkLyIsCgkiSW5zdGFsbCI6ZmFsc2UsCgkiVXNlQmFzaWNBdXRoZW50aWNhdGlvbiI6ZmFsc2UsCgkiSXNIdHRwVXJsIjpmYWxzZSwKCSJIdHRwVXNlck5hbWUiOiIiLAoJIkh0dHBQYXNzd29yZCI6IiIsCgkiSXNTaWxlbnQiOmZhbHNlLAoJIkV4ZWN1dGVQYXRoIjoiIiwKCSJDdXJyZW50VXNlciI6ZmFsc2UsCgkiSm9iTmFtZVhNTCI6InRlc3QudHh0IiwKCSJGcm9tQXBwU3RvcmUiOmZhbHNlCn0=
    FileTransferPayLoad:
      type: array
      items:
        type: object
        properties:
          LocalPath:
            type: string
            description: |
              Path of File tobe sent<br/>
              <b>Sample: </b>"example.txt"
            example: example.txt
          DevicePath:
            type: string
            description: |
              Path where to store on device<br/>
              <b>Sample: </b>"/sdcard/"
            example: /sdcard/
          Install:
            type: boolean
            description: |
              Install file after transfer
            example: false
          IsHttpUrl:
            type: boolean
            description: Whether local path is URL
            example: false
          UseBasicAuthentication:
            type: boolean
            description: If path is http URL and it requires authentication
            example: false
          HttpUserName:
            type: string
            description: Username for http authentication
            example: |
              ""
          HttpPassword:
            type: string
            description: Password for http authentication
            example: |
              ""
          IsSilent:
            type: boolean
            description: Perform job silently on device without notification
            example: false
          ExecutePath:
            type: string
            description: ""
            example: |
              ""
          CurrentUser:
            type: boolean
            description: ""
            example: false
          JobNameXML:
            type: string
            description: |
              File/App name<br/>
              <b>Sample: </b>"example.txt"
            example: example.txt
          FromAppStore:
            type: boolean
            description: If file is from Appstore of sureMDM
            example: false
    android:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/FileTransferJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersFileTransfer:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/FileTransferJob'
 
# Installjob model
    InstallJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidFileTransfer'
          Others: '#/components/schemas/OthersInstall'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Install
              example: File Transfer            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "LocalPath":"Nothing_v1.6.1_apkpure.com.apk",
                      "DevicePath":"/sdcard/",
                      "Install":true,
                      "UseBasicAuthentication":false,
                      "IsHttpUrl":false,
                      "HttpUserName":"",
                      "HttpPassword":"",
                      "IsSilent":false,
                      "ExecutePath":"",
                      "CurrentUser":false,
                      "JobNameXML":"Nothing_v1.6.1_apkpure.com.apk",
                      "FromAppStore":false
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64).
              allOf:
                - $ref: '#/components/schemas/InstallPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "androidwear", "windows_ce",<br/>"windows_mobile", "windows"
      example:
        FolderId: 
        JobName: test job
        JobType: Install
        Platform: android
        MinimumVersion: "28"
        VersionCompare: "2"
        PayLoad:
          - eyJMb2NhbFBhdGgiOiJOb3RoaW5nX3YxLjYuMV9hcGtwdXJlLmNvbS5hcGsiLCJEZXZpY2VQYXRoIjoiL3NkY2FyZC8iLCJJbnN0YWxsIjp0cnVlLCJVc2VCYXNpY0F1dGhlbnRpY2F0aW9uIjpmYWxzZSwiSXNIdHRwVXJsIjpmYWxzZSwiSHR0cFVzZXJOYW1lIjoiIiwiSHR0cFBhc3N3b3JkIjoiIiwiSXNTaWxlbnQiOmZhbHNlLCJFeGVjdXRlUGF0aCI6IiIsIkN1cnJlbnRVc2VyIjpmYWxzZSwiSm9iTmFtZVhNTCI6Ik5vdGhpbmdfdjEuNi4xX2Fwa3B1cmUuY29tLmFwayIsIkZyb21BcHBTdG9yZSI6ZmFsc2V9
    InstallPayLoad:
      type: array
      items:
        type: object
        properties:
          LocalPath:
            type: string
            description: |
              Path of File/APP<br/>
              <b>Sample: </b>"example.apk"
            example: example.txt
          DevicePath:
            type: string
            description: |
              Path where to store on device<br/>
              <b>Sample: </b>"/sdcard/"
            example: /sdcard/
          Install:
            type: boolean
            description: |
              Install file after transfer
            example: false
          IsHttpUrl:
            type: boolean
            description: Whether local path is URL
            example: false
          UseBasicAuthentication:
            type: boolean
            description: If path is http URL and it requires authentication
            example: false
          HttpUserName:
            type: string
            description: Username for http authentication
            example: |
              ""
          HttpPassword:
            type: string
            description: Password for http authentication
            example: |
              ""
          IsSilent:
            type: boolean
            description: Perform job silently on device without notification
            example: false
          ExecutePath:
            type: string
            description: ""
            example: |
              ""
          CurrentUser:
            type: boolean
            description: ""
            example: false
          JobNameXML:
            type: string
            description: |
              File/App name<br/>
              <b>Sample: </b>"example.apk"
            example: example.txt
          FromAppStore:
            type: boolean
            description: If file is from Appstore of sureMDM
            example: false
    androidFileTransfer:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/InstallJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersInstall:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/InstallJob'

# notification policy model
    NotificationPolicyJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidNotificationPolicy'
          Others: '#/components/schemas/OthersNotificationPolicy'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Notification Policy            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "PolicySettings":{  
                        "BatteryPolicy":true,
                        "ConnectionPolicy":true,
                        "DataUsage":true,
                        "inKb":false,
                        "inMb":false,
                        "inGb":true,
                        "DeviceOnlineNotification":true,
                        "SIMChangeNotication":true,
                        "PermissionGrantedNotification":true,
                        "SureMDMAlert":true,
                        "DeviceAlert":true,
                        "EmailAlert":true,
                        "SMSAlert":true,
                        "EmailAddresses":"ab@a.com ",
                        "PhoneNumber":"+911234567890",
                        "BatteryPercentage":10,
                        "ConnectionTime":"1",
                        "DataUsageQuantity":1,
                        "PluginAlert":false,
                        "UnPluggedAlert":false,
                        "DisableNotificationPolicy":false
                      }
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/NotificationPolicyPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "androidwear", "any"<br/>"windows_ce", "windows_mobile", "windows"
      example:
        FolderId: 
        JobName: test job
        JobType: notification_policy
        Platform: android
        PayLoad:
          - eyJQb2xpY3lTZXR0aW5ncyI6eyJCYXR0ZXJ5UG9saWN5Ijp0cnVlLCJDb25uZWN0aW9uUG9saWN5Ijp0cnVlLCJEYXRhVXNhZ2UiOnRydWUsImluS2IiOmZhbHNlLCJpbk1iIjpmYWxzZSwiaW5HYiI6dHJ1ZSwiRGV2aWNlT25saW5lTm90aWZpY2F0aW9uIjp0cnVlLCJTSU1DaGFuZ2VOb3RpY2F0aW9uIjp0cnVlLCJQZXJtaXNzaW9uR3JhbnRlZE5vdGlmaWNhdGlvbiI6dHJ1ZSwiU3VyZU1ETUFsZXJ0Ijp0cnVlLCJEZXZpY2VBbGVydCI6dHJ1ZSwiRW1haWxBbGVydCI6dHJ1ZSwiU01TQWxlcnQiOnRydWUsIkVtYWlsQWRkcmVzc2VzIjoiYWJAYS5jb20gIiwiUGhvbmVOdW1iZXIiOiIrOTExMjM0NTY3ODkwIiwiQmF0dGVyeVBlcmNlbnRhZ2UiOjEwLCJDb25uZWN0aW9uVGltZSI6IjEiLCJEYXRhVXNhZ2VRdWFudGl0eSI6MSwiUGx1Z2luQWxlcnQiOmZhbHNlLCJVblBsdWdnZWRBbGVydCI6ZmFsc2UsIkRpc2FibGVOb3RpZmljYXRpb25Qb2xpY3kiOmZhbHNlfX0=
    NotificationPolicyPayLoad:
      type: array
      items:
        type: object
        properties:
          PolicySettings:
            type: object
            properties:
              BatteryPolicy:
                type: boolean
                description: Battery policy status(Notifies when battery is less than
                  value set in BatteryPercentage)
                example: true
              ConnectionPolicy:
                type: boolean
                description: Connection policy status(Notifies when battery is less than
                  value set in BatteryPercentage)
                example: true
              DataUsage:
                type: boolean
                description: Data-Usage policy status(Notifies when data usage is above
                  specified in DataUsageQuantity)
                example: true
              inKb:
                type: boolean
                description: Whether data usage limit is in KB
                example: false
              inMb:
                type: boolean
                description: Whether data usage limit is in MB
                example: false
              inGb:
                type: boolean
                description: Whether data usage limit is in GB
                example: true
              DeviceOnlineNotification:
                type: boolean
                description: Get notification when device comes online
                example: true
              SIMChangeNotication:
                type: boolean
                description: Get notification when SIM is changed on device
                example: true
              PermissionGrantedNotification:
                type: boolean
                description: Whether is device Rooted
                example: false
              SureMDMAlert:
                type: boolean
                description: Get notifications on sureMDM console
                example: true
              DeviceAlert:
                type: boolean
                description: Get notifications on device
                example: true
              EmailAlert:
                type: boolean
                description: Get notifications via Email
                example: true
              SMSAlert:
                type: boolean
                description: Get notifications via SMS
                example: true
              EmailAddresses:
                type: string
                description: Email address(required if EmailAlert is set true)
              PhoneNumber:
                type: string
                description: Phone number (required if SMSAlert is set true)
              BatteryPercentage:
                type: integer
                description: Battery percentage
                example: 78
              ConnectionTime:
                type: string
                description: Device offline time limit(in minute)
                example: 10
              DataUsageQuantity:
                type: integer
                description: Data-Usage limit
                example: 3
              PluginAlert:
                type: boolean
                description: Whether device is plugged in to charging
                example: true
              UnPluggedAlert:
                type: boolean
                description: Whether device is unplugged from charging
                example: false
              DisableNotificationPolicy:
                type: boolean
                description: Desable notification policy
                example: false
    androidNotificationPolicy:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/NotificationPolicyJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersNotificationPolicy:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/NotificationPolicyJob'

# Geo fence job
    GeoFencingJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidGeoFencing'
          Others: '#/components/schemas/OthersGeoFencing'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Geo Fencing job            
            PayLoad:
              description: >
                Job specific payload<br/>

                    {  
                      "EnableFence":true,
                      "Fence":[  
                        {  
                          "Name":"fds",
                          "Latitude":21.181658623340844,
                          "Longitude":74.45293641393755,
                          "Radius":262127.69998481227,
                          "GeoFenceUnit":0,
                          "Fence":"Geo Fence"
                        }
                      ],
                      "JobOut":[  
                        {  
                          "JobID":"33701abf-68dd-410c-834a-dcbf5669f586",
                          "JobName":"Text_Message1",
                          "Platform":"ANY",
                          "Type":"TextMessage"
                        }
                      ],
                      "JobIn":[  
                        {  
                          "JobID":"fdaaaae2-9388-4fae-a51d-762d4e286883",
                          "JobName":"Text_Message2",
                          "Platform":"ANY",
                          "Type":"TextMessage"
                        }
                      ],
                      "FenceJobInDeployDelay":"0",
                      "FenceJobOutDeployDelay":"0",
                      "FenceJobInDeviceAlert":true,
                      "FenceJobInMDMAlert":true,
                      "FenceJobInEmailAlert":false,
                      "FenceJobInEmailId":"",
                      "FenceJobOutDeviceAlert":true,
                      "FenceJobOutMDMAlert":true,
                      "FenceJobOutEmailAlert":false,
                      "FenceJobOutEmailId":""
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be strigified
              allOf:
                - $ref: '#/components/schemas/GeoFencingPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "windows", "iOS"
      example:
        FolderId: 
        JobName: test_job
        JobType: GEO_FENCING
        Platform: Android
        PayLoad:
          - "{\"EnableFence\":true,\"Fence\":[{\"Name\":\"fds\",\"Latitude\":21.181658623340844,\"Longitude\":74.45293641393755,\"Radius\":262127.69998481227,\"GeoFenceUnit\":0,\"Fence\":\"Geo Fence\"}],\"JobOut\":[{\"JobID\":\"33701abf-68dd-410c-834a-dcbf5669f586\",\"JobName\":\"Text_Message1\",\"Platform\":\"ANY\",\"Type\":\"TextMessage\"}],\"JobIn\":[{\"JobID\":\"fdaaaae2-9388-4fae-a51d-762d4e286883\",\"JobName\":\"Text_Message2\",\"Platform\":\"ANY\",\"Type\":\"TextMessage\"}],\"FenceJobInDeployDelay\":\"0\",\"FenceJobOutDeployDelay\":\"0\",\"FenceJobInDeviceAlert\":true,\"FenceJobInMDMAlert\":true,\"FenceJobInEmailAlert\":false,\"FenceJobInEmailId\":\"\",\"FenceJobOutDeviceAlert\":true,\"FenceJobOutMDMAlert\":true,\"FenceJobOutEmailAlert\":false,\"FenceJobOutEmailId\":\"\"}"
    GeoFencingPayLoad:
      type: array
      items:
        type: object
        properties:
          EnableFence:
            type: boolean
            description: Whether fence is enabled or not
            example: true
          Fence:
            type: array
            description: Fencing details
            items:
              type: object
              properties:
                Name:
                  type: string
                  description: Name of the fence
                  example: Test42
                Latitude:
                  type: integer
                  description: Latitude of selected fence
                  example: 21.181658623340844
                Longitude:
                  type: integer
                  description: Longitude of selected fence
                  example: 74.45293641393755
                Radius:
                  type: integer
                  description: Radius of selected fence (Default unit - Meter)
                  example: 262127.69998481227
                GeoFenceUnit:
                  type: integer
                  description: Unit of Radius, 0-Meter, 1-Kilometer, 2-Mile, 3-Feet
                  example: 0
                Fence:
                  type: string
                  description: Type of Fence
                  example: Geo Fence
          JobOut:
            type: array
            description: Jobs to apply when device moves outside of fence
            items:
              type: object
              properties:
                JobID:
                  type: string
                  description: JobID of the job to be activated 
                  example: 33701abf-68dd-410c-834a-dcbf5669f586
                JobName:
                  type: string
                  description: Name of the job to be activated 
                    designated area
                  example: Text_Message1
                Platform:
                  type: string
                  description: Platform of the Job
                  example: ANY
                Type:
                  type: string
                  description: Type of the Job
                  example: TextMessage
          JobIn:
            type: array
            description: Jobs to apply when device moves inside of fence
            items:
              type: object
              properties:
                JobID:
                  type: string
                  description: JobID of the job to be activated 
                  example: fdaaaae2-9388-4fae-a51d-762d4e286883
                JobName:
                  type: string
                  description: JobName of the job to be activated 
                  example: Text_Message2
                Platform:
                  type: string
                  description: Platform of the Job
                  example: ANY
                Type:
                  type: string
                  description: Type of the job
                  example: TextMessage
          FenceJobInDeployDelay:
            type: integer
            description: Delay Time to deploy job after device is reported to be in radius
              (In minutes)
            example: 0
          FenceJobOutDeployDelay:
            type: integer
            description: Delay Time to deploy job after device is reported to be outside the
              radius (In minutes)
            example: 0
          FenceJobInDeviceAlert:
            type: boolean
            description: If device is inside the fence, it will send alert to device
            example: true
          FenceJobInMDMAlert:
            type: boolean
            description: If device is inside the fence, it will send alert to console
            example: true
          FenceJobInEmailAlert:
            type: boolean
            description: If device is inside the fence, it will send an email reporting the same
            example: false
          FenceJobInEmailId:
            type: string
            description: Email ID to send email, if device is inside the fence
            example: " "
          FenceJobOutDeviceAlert:
            type: boolean
            description: |
              If device is outside the fence, it will send alert to device<br/>
              <i style="color:red;">Note: </i>It will not work for iOS devices
            example: true
          FenceJobOutMDMAlert:
            type: boolean
            description: If device is outside the fence, it will send alert to console
            example: true
          FenceJobOutEmailAlert:
            type: boolean
            description: If device is outside the fence, it will send an email reporting the same
            example: false
          FenceJobOutEmailId:
            type: string
            description: Email ID to send email, if device is outside the fence
            example: false
    androidGeoFencing:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/GeoFencingJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersGeoFencing:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/GeoFencingJob'

# Time fencing job model
    TimeFencingJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidTimeFencing'
          Others: '#/components/schemas/OthersTimeFencing'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Time Fencing job
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "EnableFence":true,
                      "JobIn":[  
                        {  
                          "JobID":"70800079-4890-4ab2-a97b-111966d35052",
                          "JobName":"text",
                          "Platform":"ANY",
                          "Type":"TextMessage"
                        }
                      ],
                      "JobOut":[  
                        {  
                          "JobID":"eeb89057-40a2-4495-bb1d-d9f0f6e2ddce",
                          "JobName":"Text_Message1",
                          "Platform":"ANY",
                          "Type":"TextMessage"
                        }
                      ],
                      "SelectFence":{  
                        "TimeFenceRows":[  
                          {  
                            "TimeZoneType":1,
                            "StartTime":"01:00",
                            "EndTime":"13:00",
                            "Days":[  
                              "1",
                              "2",
                              "3",
                              "4",
                              "5",
                              "6",
                              "7"
                            ]
                          }
                        ]
                      },
                      "FenceJobInDeviceAlert":true,
                      "FenceJobInMDMAlert":true,
                      "FenceJobInEmailAlert":true,
                      "FenceJobInEmailId":"abc@gmail.com",
                      "FenceJobOutDeviceAlert":true,
                      "FenceJobOutMDMAlert":true,
                      "FenceJobOutEmailAlert":true,
                      "FenceJobOutEmailId":"abc@gmail.com"
                    }
              allOf:
                - $ref: '#/components/schemas/TimeFencingPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "windows", "iOS"
      example:
        FolderId: 
        JobName: test job
        JobType: TIME_FENCING
        Platform: android
        PayLoad:
          - '{"EnableFence":true,"JobIn":[{"JobID":"70800079-4890-4ab2-a97b-111966d35052","JobName":"text","Platform":"ANY","Type":"TextMessage"}],"JobOut":[{"JobID":"eeb89057-40a2-4495-bb1d-d9f0f6e2ddce","JobName":"Text_Message1","Platform":"ANY","Type":"TextMessage"}],"SelectFence":{"TimeFenceRows":[{"TimeZoneType":1,"StartTime":"01:00","EndTime":"13:00","Days":["1","2","3","4","5","6","7"]}]},"FenceJobInDeviceAlert":true,"FenceJobInMDMAlert":true,"FenceJobInEmailAlert":true,"FenceJobInEmailId":"abc@gmail.com","FenceJobOutDeviceAlert":true,"FenceJobOutMDMAlert":true,"FenceJobOutEmailAlert":true,"FenceJobOutEmailId":"abc@gmail.com"}'
    TimeFencingPayLoad:
      type: array
      items:
        type: object
        properties:
          EnableFence:
            type: boolean
            description: Whether fence is enabled
            example: true
          JobIn:
            type: array
            description: Jobs to apply when device moves inside of fence
            items:
              type: object
              properties:
                JobID:
                  type: string
                  description: JobID of the Job to be activated 
                  example: fdaaaae2-9388-4fae-a51d-762d4e286883
                JobName:
                  type: string
                  description: JobName of Job to be activated if device moves inside the time fence
                  example: text
                Platform:
                  type: string
                  description: Platform of Job
                  example: ANY
                Type:
                  type: string
                  description: Type of Job
                  example: TextMessage
          JobOut:
            type: array
            description: Jobs to apply when device moves outside of fence
            items:
              type: object
              properties:
                JobID:
                  type: string
                  description: JobID of Job to be activated if device moves inside the designated area
                  example: fdaaaae2-9388-4fae-a51d-762d4e286883
                JobName:
                  type: string
                  description: JobName of Job to be activated if device moves outside the time fence
                  example: text
                Platform:
                  type: string
                  description: Platform of Job
                  example: ANY
                Type:
                  type: string
                  description: Type of Job
                  example: TextMessage
          SelectFence:
            type: object
            description: Time fence details
            properties:
              TimeFenceRows:
                type: array
                items:
                  type: object
                  properties:
                    TimeZoneType:
                      type: integer
                      description: For Console Time, TimeZone type is 1 and for Device Time it is 0
                      example: 1
                    StartTime:
                      type: string
                      description: |
                        Starting Time of the fence<br/>
                        <i style="color:red;">Note: </i>If TimeZoneType is Console Time i.e. 1, than time will be converted into GMT time zone.
                      example: "09:00"
                    EndTime:
                      type: string
                      description: |
                        Ending Time of the fence<br/>
                        <i style="color:red;">Note: </i>If TimeZoneType is Console Time i.e. 1, than time will be converted into GMT time zone.
                      example: "13:00"
                    Days:
                      type: array
                      description: |
                        Days of the week on which Time Fence activates automatically<br/>
                        <i style="color:red;">Note: </i> 1 indicates Monday and so on, 7 indicates Sunday
                      items: 
                        type: string
                        example: 1,2,3,4,5,6,7
          FenceJobInDeviceAlert:
            type: boolean
            description: It sends an alert to device when the time fence starts
            example: true
          FenceJobInMDMAlert:
            type: boolean
            description: It sends an alert to MDM when the time fence starts
            example: true
          FenceJobInEmailAlert:
            type: boolean
            description: It sends an alert to specified email when the time fence starts
            example: true
          FenceJobInEmailId:
            type: string
            description: It sends an alert to email when the time fence starts
            example: abc@gmail.com
          FenceJobOutDeviceAlert:
            type: boolean
            description: It sends an alert to device when the time fence ends
            example: true
          FenceJobOutMDMAlert:
            type: boolean
            description: It sends an alert to MDM when the time fence ends
            example: true
          FenceJobOutEmailAlert:
            type: boolean
            description: It sends an alert to specified email when the time fence ends
            example: true
          FenceJobOutEmailId:
            type: string
            description: It sends an alert to email when the time fence ends
            example: abc@gmail.com
    androidTimeFencing:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/TimeFencingJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                Android [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =   MinimumVersion<br/>
              example: |
                "2"
    OthersTimeFencing:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/TimeFencingJob'

# Network fencing job
    NetworkFencingJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidNetworkFencing'
          Others: '#/components/schemas/OthersNetworkFencing'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Network Fencing job
            PayLoad:
              description: >
                Job specific payload<br/>

                    {  
                      "EnableFence":true,
                      "JobIn":[  
                        {  
                          "JobID":"70800079-4890-4ab2-a97b-111966d35052",
                          "JobName":"text",
                          "Platform":"ANY",
                          "Type":"TextMessage"
                        }
                      ],
                      "JobOut":[  
                        {  
                          "JobID":"eeb89057-40a2-4495-bb1d-d9f0f6e2ddce",
                          "JobName":"text2",
                          "Platform":"ANY",
                          "Type":"TextMessage"
                        }
                      ],
                      "FenceJobInDeployDelay":"5",
                      "FenceJobOutDeployDelay":"5",
                      "SelectFence":{  
                        "NetworkFenceRows":[  
                          {  
                            "ssid":"gb"
                          }
                        ]
                      },
                      "FenceJobInDeviceAlert":true,
                      "FenceJobInMDMAlert":true,
                      "FenceJobInEmailAlert":true,
                      "FenceJobInEmailId":"abc@gmail.com",
                      "FenceJobOutDeviceAlert":true,
                      "FenceJobOutMDMAlert":true,
                      "FenceJobOutEmailAlert":true,
                      "FenceJobOutEmailId":"abc@gmail.com"
                    }
              allOf:
                - $ref: '#/components/schemas/NetworkFencingPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android"
      example:
        FolderId: 
        JobName: test job
        JobType: NETWORK_FENCING
        Platform: android
        PayLoad:
          - '{"EnableFence":true,"JobIn":[{"JobID":"70800079-4890-4ab2-a97b-111966d35052","JobName":"text","Platform":"ANY","Type":"TextMessage"}],"JobOut":[{"JobID":"eeb89057-40a2-4495-bb1d-d9f0f6e2ddce","JobName":"text2","Platform":"ANY","Type":"TextMessage"}],"FenceJobInDeployDelay":"5","FenceJobOutDeployDelay":"5","SelectFence":{"NetworkFenceRows":[{"ssid":"gb"}]},"FenceJobInDeviceAlert":true,"FenceJobInMDMAlert":true,"FenceJobInEmailAlert":true,"FenceJobInEmailId":"abc@gmail.com","FenceJobOutDeviceAlert":true,"FenceJobOutMDMAlert":true,"FenceJobOutEmailAlert":true,"FenceJobOutEmailId":"abc@gmail.com"}'
    NetworkFencingPayLoad:
      type: object
      properties:
        EnableFence:
          type: string
          description: Whether network fence is enabled
        JobIn:
          type: object
          description: Jobs to apply when device moves inside of fence
          properties:
            JobID:
              type: string
              description: JobID of Job to be activated if device moves inside the
                designated area
              example: fdaaaae2-9388-4fae-a51d-762d4e286883
            JobName:
              type: string
              description: JobName of Job to be activated if device moves inside the
                time fence
              example: text
            Platform:
              type: string
              description: Platform of Job
              example: ANY
            Type:
              type: string
              description: Type of Job
              example: TextMessage
        JobOut:
          type: object
          description: Jobs to apply when device moves outside of fence
          properties:
            JobID:
              type: string
              description: JobID of Job to be activated if device moves inside the
                designated area
              example: fdaaaae2-9388-4fae-a51d-762d4e286883
            JobName:
              type: string
              description: JobName of Job to be activated if device moves outside the
                time fence
              example: text
            Platform:
              type: string
              description: Platform of Job
              example: ANY
            Type:
              type: string
              description: Type of Job
              example: TextMessage
        FenceJobInDeployDelay:
          type: string
          description: Delay in minutes after device is connected to provided SSID
          example: 5
        FenceJobOutDeployDelay:
          type: string
          description: Delay in minutes after device is disconnected to provided SSID
          example: 5
        SelectFence:
          type: object
          description: fence details
          properties:
            NetworkFenceRows:
              type: object
              properties:
                SSID:
                  type: string
                  description: SSID of WiFi where job in or job out acts
                  example: 42Gears Office
        FenceJobInDeviceAlert:
          type: boolean
          description: It sends an alert to device when the time fence starts
          example: true
        FenceJobInMDMAlert:
          type: boolean
          description: It sends an alert to MDM when the time fence starts
          example: true
        FenceJobInEmailAlert:
          type: boolean
          description: It sends an alert to specified email when the time fence starts
          example: true
        FenceJobInEmailId:
          type: string
          description: It sends an alert to email when the time fence starts
          example: abc@gmail.com
        FenceJobOutDeviceAlert:
          type: boolean
          description: It sends an alert to device when the time fence ends
          example: true
        FenceJobOutMDMAlert:
          type: boolean
          description: It sends an alert to MDM when the time fence ends
          example: true
        FenceJobOutEmailAlert:
          type: boolean
          description: It sends an alert to specified email when the time fence ends
          example: true
        FenceJobOutEmailId:
          type: string
          description: It sends an alert to email when the time fence ends
          example: abc@gmail.com
    androidNetworkFencing:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/NetworkFencingJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                Android [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =   MinimumVersion<br/>
              example: |
                "2"
    OthersNetworkFencing:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/NetworkFencingJob'
        
# Wifi Configuration job
    WiFiConfigJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidWiFiConfig'
          Others: '#/components/schemas/OthersWiFiConfig'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Wi-fi Configuration Settings            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "SSID":"test",
                      "SecurityType":1,
                      "Password":"12345678",
                      "AutoConnect":false,
                      "PortableHotspot":true,
                      "HiddenNetwork":false
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/WiFiConfigPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "androidwear", "AndroidVR"<br/>
                <i style="color:red;">Note: </i>Hotspot setting is supported for androID only
      example:
        FolderId: 
        JobName: test job
        JobType: wifi configuration settings
        Platform: android
        PayLoad:
          - eyJTU0lEIjoidGVzdCIsIlNlY3VyaXR5VHlwZSI6MSwiUGFzc3dvcmQiOiIxMjM0NTY3OCIsIkF1dG9Db25uZWN0IjpmYWxzZSwiUG9ydGFibGVIb3RzcG90Ijp0cnVlLCJIaWRkZW5OZXR3b3JrIjpmYWxzZX0=
    WiFiConfigPayLoad:
      type: array
      items:
        type: object
        properties:
          SSID:
            type: string
            description: Wi-Fi / Hotspot name
            example: true
          SecurityType:
            type: integer
            description: |
              Type of security(for Hostspot)
              0: Open
              1: WEP
              2: WPA/WPA2 PSK
            example: 1
          Password:
            type: string
            description: |
              Password of Wi-Fi to connect / Passwors of hotspot to be created
            example: 12345678
          AutoConnect:
            type: boolean
            description: Enable auto connect for Wi-Fi settings
            example: false
          PortableHotspot:
            type: boolean
            description: For creating Hotspot
            example: true
          HiddenNetwork:
            type: boolean
            description: Make hotspot network hidden
            example: true
    androidWiFiConfig:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/WiFiConfigJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersWiFiConfig:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/WiFiConfigJob'

# Device Migration model
    DeviceMigrationJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidDeviceMigration'
          Others: '#/components/schemas/OthersDeviceMigration'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Device Migration between Groups  
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "SelectedGrpId":
                        "5e1c484f-972f-4c06-8f84-aae0e7f7b9fe"
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/DeviceMigrationPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
      example:
        FolderId: 
        JobName: test job
        JobType: move_device
        Platform: android
        PayLoad:
          - eyJTZWxlY3RlZEdycElkIjoiNWUxYzQ4NGYtOTcyZi00YzA2LThmODQtYWFlMGU3ZjdiOWZlIn0=
    DeviceMigrationPayLoad:
      type: array
      items:
        type: object
        properties:
          SelectedGrpId:
            type: string
            description: ID of selected group
            example: 9dd587ed-25d9-48ea-b57c-d664c941971c
    androidDeviceMigration:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/DeviceMigrationJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersDeviceMigration:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/DeviceMigrationJob'

# SMS Tracking Model
    SMSTrackingJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidSMSTracking'
          Others: '#/components/schemas/OthersSMSTracking'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                SMS Tracking job            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "SMSTracking":"1",
                      "Periodicity":"16"
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/SMSTrackingPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "androidwear"
      example:
        FolderId: 
        JobName: test job
        JobType: SMS_TRACKING
        Platform: android
        PayLoad:
          - eyJDYWxsVHJhY2tpbmciOiIxIiwiUGVyaW9kaWNpdHkiOiIxNSJ9
    SMSTrackingPayLoad:
      type: array
      items:
        type: object
        properties:
          SMSTracking:
            type: string
            description: |
              SMS log tracking status<br/>
              "0": Enable<br/>
              "1": Desable<br/>
            example: "1"
          Periodicity:
            type: string
            description: Periodicity of tracking in minutes<br/>(if SMS tracking is enabled)
            example: 15
    androidSMSTracking:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/SMSTrackingJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersSMSTracking:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/SMSTrackingJob'


# Call tracking model
    CallTrackingJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidCallTracking'
          Others: '#/components/schemas/OthersCallTracking'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Call Tracking job            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "CallTracking":"1",
                      "Periodicity":"15"
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/CallTrackingPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "androidwear"
      example:
        FolderId: 
        JobName: test job
        JobType: CALL_TRACKING
        Platform: android
        PayLoad:
          - eyJDYWxsVHJhY2tpbmciOiIxIiwiUGVyaW9kaWNpdHkiOiIxNSJ9
    CallTrackingPayLoad:
      type: array
      items:
        type: object
        properties:
          CallTracking:
            type: string
            description: |
              Call log tracking status<br/>
              "0": Enable<br/>
              "1": Desable<br/>
            example: "1"
          Periodicity:
            type: string
            description: Periodicity of tracking in minutes<br/>(if Call tracking is enabled)
            example: 15
    androidCallTracking:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/CallTrackingJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersCallTracking:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/CallTrackingJob'

# App Settings model
    AppSettingsJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidAppSettings'
          Others: '#/components/schemas/OthersAppSettings'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                App Settings job            
            PayLoad:
              description: >
                Job specific payload<br/>

                    {  
                      "AppName":[  
                        "Alexa"
                      ],
                      "Packages":[  
                        "com.amazon.dee.app"
                      ],
                      "StartUpDelay":[  
                        "12"
                      ],
                      "Action":"ClearData",
                      "PhonePin":"0000"
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/AppSettingsPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "Linux"
      example:
        FolderId: 
        JobName: test job
        JobType: NEW_APP_SETTINGS
        Platform: android
        PayLoad:
          - eyJBcHBOYW1lIjpbIkFsZXhhIl0sIlBhY2thZ2VzIjpbImNvbS5hbWF6b24uZGVlLmFwcCJdLCJTdGFydFVwRGVsYXkiOlsiMTIiXSwiQWN0aW9uIjoiQ2xlYXJEYXRhIiwiUGhvbmVQaW4iOiIwMDAwIn0=
    AppSettingsPayLoad:
      type: array
      items:
        type: object
        properties:
          AppName:
            type: array
            description: |
              Name of App(s)
            items:
              type: string
              description: ""
            example:
              - Alexa
              - Amaze
          Packages:
            type: array
            description: |
              Name of app package(s)
            items:
              type: string
              description: ""
            example:
              - com.amazon.dee.app
              - com.amaze.filemanager
          StartUpDelay:
            type: array
            description: App startup delay in sec
            items:
              type: string
              description: ""
            example:
              - "12"
          Action:
            type: string
            description: |
              Action to be performed
              - LockApps
              - RunAtStartup
              - Uninstall
              - ClearData
              - VisibleList
              - InvisibleList
              <i style=\"color:red;\">Note: </i>For Linux platform only Uninstall is supported
            example: 15
          PhonePin:
            type: string
            description: Device Lock pin
            example: 1234
    androidAppSettings:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/AppSettingsJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersAppSettings:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/AppSettingsJob'

# Remote Wipe Job
    RemoteWipeJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidRemoteWipe'
          Others: '#/components/schemas/OthersRemoteWipe'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Remote Data Wipe job            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "WipeAllData":true,
                      "IsScheduleWipe":true,
                      "GracePeriod":"4",
                      "IsWipeOnRoot":false
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/RemoteWipePayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "any", "windows_ce",<br/> "windows_mobile"
      example:
        FolderId: 
        JobName: test job
        JobType: Wipe
        Platform: android
        PayLoad:
          - eyJXaXBlQWxsRGF0YSI6dHJ1ZSwiSXNTY2hlZHVsZVdpcGUiOnRydWUsIkdyYWNlUGVyaW9kIjoiNCIsIklzV2lwZU9uUm9vdCI6ZmFsc2V9
    RemoteWipePayLoad:
      type: array
      items:
        type: object
        properties:
          WipeAllData:
            type: boolean
            description: Wipe out all data from device
            example: true
          IsScheduleWipe:
            type: boolean
            description: Set wipe out data from device at regular intervals
            example: false
          GracePeriod:
            type: integer
            description: Time Period interval to wipe out data (In Hours)
            example: false
          IsWipeOnRoot:
            type: integer
            description: Wipe Data even if device is rooted. By default it is false
            example: false
    androidRemoteWipe:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/RemoteWipeJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =   MinimumVersion<br/>
              example: |
                "2"
    OthersRemoteWipe:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/RemoteWipeJob'

# Location Tracking Job model
    LocationTrackingJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidLocationTracking'
          Others: '#/components/schemas/OthersLocationTracking'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Location Tracking job            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "LocationTracking":true,
                      "Periodicity":4
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/LocationTrackingPayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "androidwear"
      example:
        FolderId: 
        JobName: test job
        JobType: location
        Platform: android
        PayLoad:
          - eyJMb2NhdGlvblRyYWNraW5nIjp0cnVlLCJQZXJpb2RpY2l0eSI6NH0=
    LocationTrackingPayLoad:
      type: array
      items:
        type: object
        properties:
          LocationTracking:
            type: boolean
            description: Location tracking status
            example: true
          Periodicity:
            type: integer
            description: Periodicity of tracking in minutes(if Location tracking is enabled)
            example: 5
    androidLocationTracking:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/LocationTrackingJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersLocationTracking:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/LocationTrackingJob'

# Text Message job model
    TextMessageJob:
      discriminator:
        propertyName: Platform
        mapping:
          android: '#/components/schemas/androidTextMessage'
          Others: '#/components/schemas/OthersTextMessage'
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - type: object
          properties:
            JobType:
              type: string
              description: |
                Send Text Message            
            PayLoad:              
              description: >
                Job specific payload<br/>

                    {  
                      "Subject":"Greetings !",
                      "Body":"Happy Birthday!",
                      "ReadNotification":false,
                      "ForceRead":true,
                      "EnableBuzz":true,
                      "BuzzInterval":"12",
                      "CloseDurationEnable":true,
                      "Interval":"12",
                      "RichTextBody":"",
                      "RichTextHtml":""
                    }
                <i style="color:red;">Note: </i>
                  - PayLoad should be converted in [Base64](https://en.wikipedia.org/wiki/Base64)
              allOf:
                - $ref: '#/components/schemas/TextMessagePayLoad'
            Platform:
              type: string
              description: |
                Name of platform<br/>
                <b>Platform Supported: </b>"android", "androidwear", "Linux"<br/>"windows_ce", "windows_mobile", "windows"
      example:
        FolderId: 
        JobName: test job
        JobType: text_message
        Platform: android
        PayLoad:
          - eyJTdWJqZWN0IjoiR3JlZXRpbmdzICEiLCJCb2R5IjoiSGFwcHkgQmlydGhkYXkhIiwiUmVhZE5vdGlmaWNhdGlvbiI6ZmFsc2UsIkZvcmNlUmVhZCI6dHJ1ZSwiRW5hYmxlQnV6eiI6dHJ1ZSwiQnV6ekludGVydmFsIjoiMTIiLCJDbG9zZUR1cmF0aW9uRW5hYmxlIjp0cnVlLCJJbnRlcnZhbCI6IjEyIiwiUmljaFRleHRCb2R5IjoiIiwiUmljaFRleHRIdG1sIjoiIn0=
    TextMessagePayLoad:
      type: array
      items:
        type: object
        properties:
          Subject:
            type: string
            description: Subject of the Message which provides an overview to recepient about
              what message contains
            example: Urgent Attention
          Body:
            type: string
            description: Detailed Message
            example: Report to office at 12 noon
          Read Notification:
            type: boolean
            description: It notifies the user by sending notification
            example: true
          ForceRead:
            type: boolean
            description: It pop-ups the user with the message and forces to read the message
              sent by administrator
            example: false
          EnableBuzz:
            type: boolean
            description: Send buzz with message
            example: false
          BuzzInterval:
            type: string
            description: Buzz interval(in sec)
            example: "12"
          CloseDurationEnable:
            type: boolean
            description: Enable close message pop-up
            example: false
          Interval:
            type: string
            description: Close message pop-up after certain time specified(in sec)
            example: false
          RichTextBody:
            type: string
            description: It is body for Rich Text Message which supports formatting such as
              fonts, colors and text size
            example: ""
          RichTextHTML:
            type: string
            description: It is similar to RichTextBody but this is mainly used for HTML
              webpages. But for editor file it behaves like PlainText.
            example: ""
    androidTextMessage:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/TextMessageJob'
        - type: object
          properties:
            MinimumVersion:
              type: string
              description: >
                AndroID [API level](https://source.android.com/setup/start/build-numbers)<br>("0" to allow any)
              example: |
                "28"
            VersionCompare:
              type: string
              description: >
                Way of version comparison<br/>

                0: >= MinimumVersion<br/>

                1: <= MinimumVersion<br/>

                2: =  MinimumVersion<br/>
              example: |
                "2"
    OthersTextMessage:
      allOf: 
        - $ref: '#/components/schemas/JobCreateModel'
        - $ref: '#/components/schemas/TextMessageJob'